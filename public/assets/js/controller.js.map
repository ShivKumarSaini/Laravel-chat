{"version":3,"sources":["chat-settings.controller.js","stream.controller.js","likes-widget.controller.js","model-profile-image.controller.js","model-video.controller.js","model-profile.controller.js","model-create-gallery.controller.js","model-edit-gallery.controller.js","model-image-gallery.controller.js","model-image-galleries.controller.js","model-video-galleries.controller.js","model-video-gallery.controller.js","model-video-upload.controller.js","model-setting.controller.js","model-schedule.controller.js","model-earning.controller.js","ModelOnline.controller.js","media.controller.js","payment.controller.js","model-request.controller.js","model-manage-product.controller.js","buy.controller.js","order-tracking.controller.js"],"names":["angular","module","controller","$scope","appSettings","chatSettingService","performerchat","get","USER","role","id","then","data","saveChanges","form","settingsData","copy","update","success","alertify","message","error","$timeout","$uibModal","socket","PerformerChat","chatService","$http","commonHelper","userService","tablist","$","addClass","reTimeoutRoom","onMessageCallbacks","isGroupLive","isPrivateChat","isOffline","groupLink","roomId","currentModelId","virtualRoom","modelId","streamingInfo","spendTokens","time","tokensReceive","type","hasRoom","threadId","totalView","isStreaming","reCountMember","emit","guests","members","$$phase","$apply","on","sender","connection","userid","channel","onGroupChat","model_id","model","online","removeClass","BASE_URL","show","status","hide","onModelInitPublicChat","broadcastid","isLoading","hasClass","location","reload","isShowPrivateMessage","length","chatType","warning","window","href","CHAT_ROOM_ID","ownerId","modalInstance","open","animation","templateUrl","Math","random","toString","slice","backdrop","keyboard","result","res","timeoutVideo","steamId","connectionNow","currentConnectStart","initRTCMultiConnection","RTCMultiConnection","socketURL","socketMessageEvent","getExternalIceServers","videosContainer","document","getElementById","sessionid","sdpConstraints","mandatory","OfferToReceiveAudio","OfferToReceiveVideo","onMediaError","alert","onstream","event","numOfVideos","childElementCount","isInitiator","mediaElement","removeAttribute","isUpperUserLeft","timeout","i","initNumber","capture","console","log","takeSnapshot","snapshot","post","base64","shotNumber","setTimeout","$on","clearTimeout","recordingInterval","dontCaptureUserMedia","attachStreams","stream","streamid","video","createElement","setAttributeNode","createAttribute","e","setAttribute","volume","srcObject","width","parseInt","clientWidth","getHTMLMediaElement","title","buttons","showOnMouseEnter","appendChild","media","play","enableLogs","initRoom","room","openBroadcast","typeOfStreams","screen","audio","oneway","session","joinBroadcast","has","privateChatRoom","broadcaster","reCheckRoomPresence","isRoomExists","join","extra","close","dontTransmit","innerHTML","msg","isBroadcastExists","beep","unique","Date","getTime","snd","Audio","sendTip","prompt","evt","value","isNumber","sendTipTokens","response","tokens","sendObj","text","sendModelReceiveInfo","set","backToFreeChat","url","onModelReceiveInfo","stopStreaming","autoCloseEntireSession","changeStreaming","getChatPrice","cost","confirm","statusForUpdating","modelStatus","updateStatus","userId","isFullScreenMode","showFullScreen","notShowFullScreen","likesWidgetService","init","itemId","item","count","headers","config","totalLikes","checkMe","liked","likeThis","likeMe","mediaService","currentPage","lastPage","perPage","LIMIT_PER_PAGE","orderBy","sort","myImages","loadMoreInfinite","findProfileByMe","page","limit","mediaType","current_page","last_page","makeProfile","index","setProfile","deleteModelImage","key","deleteImage","splice","scroll","scrollTop","height","concat","showUploadModal","size","resolve","parentId","push","myVideos","findByMe","deleteFile","loadMoreImages","countryService","categoryService","profile","performer","countries","states","cities","getPerformer","category_id","age","city_id","countryId","country_id","stateId","state_id","user_id","languages","split","getCountries","getStates","getCities","ages","heightList","publics","categories","selectState","selectCity","all","changeCountry","changeState","errors","state","city","formSubmitted","savePerformerProfile","state_name","city_name","$valid","updatePerformer","firstName","lastName","checkLanguage","tag","myRegEx","test","galleryService","gallery","name","description","price","submitted","submitCreateGallery","create","setHeader","submitCreateImage","files","image","idModel","formData","FormData","append","ajax","contentType","processData","Promise","reject","dataFile","setMainImage","file","setMediaStatus","catch","err","attachmentId","initEdit","previewImage","mediaMeta","priviewSetting","method","allowedTypes","fileName","multiple","showDelete","showPreview","showDone","statusBarWidth","dragdropWidth","onSuccess","xhr","attr","path","onError","errMsg","html","deleteCallback","element","pd","priviewImage","uploadFile","submitUpdateGallery","submitUpdateImage","earningService","galleryInit","pageLoadSuccess","galleryId","findMyMediaGallery","deleteImageGallery","countPaidItem","imageId","myGaleries","findMyGalleries","myGalleries","setGalleryStatus","deleteProcessing","deleteGallery","countPaidGallery","videoService","options","findMyVideoGallery","deleteVideoGallery","deleteVideo","showVideoDetail","setVideoStatus","videoId","uploadInit","unitPrices","posterSettings","poster","trailerSettings","trailer","data1","fullMovieSettings","fullMovie","submitUploadVideo","submitUpdateVideo","authService","settings","password","oldPassword","newPassword","newpPasswordRetype","submitOtherSetting","updateOtherSetting","submitChangePassword","changePassword","notify","countryInit","contact","submitUpdateContact","updateContact","payment","paymentValue","min","paymentInit","JSON","parse","submitUpdatePayment","updatePayment","suspend","reason","check","submitDisableAccount","suspendAccount","initSettings","scheduleService","schedule","nextLiveShow","monday","tuesday","wednesday","thursday","friday","saturday","sunday","scheduleInit","datetimepicker","debug","format","minDate","moment","showTodayButton","showClear","target","parent","find","prop","click","val","submitUpdateSchedule","setSchedule","timePeriod","group","start","end","earnings","submitSearch","useCurrent","date","maxDate","earningInit","pagination","findMe","submitFilterPeriod","loadMoreReport","changeGroup","showDayDetail","details","filterByDay","showNoneDetail","earningId","detail","filterByDefault","_","onlineService","totalPages","modelOnlineNull","keyword","filter","styleModelItem","getData","widthScreen","widthItems","floor","category","categoryId","users","total","customSplitStringTags","tags","arr","getTopModels","topModels","setPage","onlineInit","setInterval","setFilter","getModelsByCategory","setFavorite","favorite","isRotate","modelRotates","thread","getModelRotateImages","isArray","images","forEach","lastCaptureImage","currentTab","setTab","getMedia","getModelVideos","videos","getModelGalleries","galleries","changePage","checkOwner","owner","galleryPrice","rejectTransaction","approveTransaction","showTransactionDetail","transaction","payoutService","startDate","toDate","typeRequest","dateFrom","dateTo","$watch","showRequestPayout","earningByRequestedDate","previousPayout","pendingBalance","endDate","convertedStartDate","convertedEndDate","getFullYear","getMonth","getDate","getEarningByRequestedDate","amount","getLastestRequestPayout","getTotalPendingBalance","toFixed","comments","request","note","studioId","getComments","resp","comment","addComment","newComment","productImage","uploadStatus","submit","productService","quantity","buy","product","inStock","orderService","order","shippingStatus","updatedShippingStatus"],"mappings":"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","file":"controller.js","sourcesContent":["/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('chatSettingCtrl', [ '$scope', 'appSettings', 'chatSettingService', function ($scope, appSettings, chatSettingService) {\r\n  $scope.performerchat = [];\r\n  //get chat settings data;\r\n  chatSettingService.get(appSettings.USER.role, appSettings.USER.id).then(function (data) {\r\n    $scope.performerchat = data.data;\r\n  });\r\n  $scope.saveChanges = function (form) {\r\n    var settingsData = angular.copy($scope.performerchat);\r\n    chatSettingService.update(appSettings.USER.id, settingsData).then(function (data) {\r\n      if (data.data.success) {\r\n        return alertify.success(data.data.message);\r\n      }\r\n      return  alertify.error(data.data.message);\r\n\r\n\r\n    });\r\n  };\r\n}]);","'use strict';\r\n\r\nangular.module('matroshkiApp')\r\n.controller('streamCtrl',[ '$scope', '$timeout', 'appSettings', '$uibModal',\r\n\t'socket', 'PerformerChat', 'chatService', 'chatSettingService', '$http','commonHelper', 'userService',\r\n\tfunction ($scope, $timeout, appSettings, $uibModal, socket, PerformerChat, chatService, chatSettingService, $http,commonHelper, userService) {\r\n\t$scope.tablist = 'profiles';\r\n\tif (!appSettings.USER || appSettings.USER.role != 'model') {\r\n\t\t$('#videos-container').addClass('loader');\r\n    }\r\n   var reTimeoutRoom = null ;\r\n\t// using single socket for RTCMultiConnection signaling\r\n\tvar onMessageCallbacks = {};\r\n\t$scope.isGroupLive = false;\r\n\t$scope.isPrivateChat = false;\r\n\t$scope.isOffline = false;\r\n\t$scope.groupLink = null;\r\n\t$scope.roomId = null;\r\n  $scope.currentModelId = null;\r\n\t$scope.virtualRoom = null;\r\n\r\n  $scope.modelId = null;\r\n\r\n\t$scope.streamingInfo = {\r\n\t\tspendTokens: 0,\r\n\t\ttime: 0,\r\n\t\ttokensReceive: 0,\r\n\t\ttype: 'public',\r\n\t\thasRoom: true\r\n\t};\r\n\r\n\tvar threadId;\r\n\t$scope.totalView = 0;\r\n\t$scope.isStreaming = false;\r\n\r\n\tfunction reCountMember() {\r\n\t\tif (!threadId) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsocket.emit('countMember', threadId, function(data) {\r\n\t\t\t$scope.totalView = data.guests + data.members;\r\n\t\t\t$scope.$$phase || $scope.$apply();\r\n\t\t});\r\n\r\n\t\t$timeout(function() {\r\n\t\t\treCountMember();\r\n\t\t}, 10000);\r\n\t}\r\n\r\n\tsocket.on('broadcast-message', function (data) {\r\n\t\tif (data.sender == connection.userid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (onMessageCallbacks[data.channel]) {\r\n\t\t\tonMessageCallbacks[data.channel](data.message);\r\n\t\t}\r\n\t});\r\n\r\n\tsocket.onGroupChat(function (data) {\r\n\t\t// console.log(data);\r\n\r\n\t\tif (PerformerChat.model_id == data.model) {\r\n\t\t\t$scope.isGroupLive = data.online;\r\n\t\t\t$scope.isOffline = true;\r\n\t\t\t$('#videos-container').removeClass('loader');\r\n\t\t\tvar virtualRoom = data.virtualRoom ? '?vr=' + data.virtualRoom : '';\r\n\t\t\t$scope.groupLink = appSettings.BASE_URL + 'members/groupchat/' + data.model + virtualRoom;\r\n\t\t} else {\r\n\t\t\t$('#offline-image').show();\r\n\t\t\t$scope.isOffline = true;\r\n\t\t}\r\n\t});\r\n\tsocket.on('public-room-status', function (status) {\r\n\t\tif (!status) {\r\n\t\t\t$('#videos-container').removeClass('loader');\r\n\t\t\t$('#offline-image').show();\r\n\t\t\t$scope.isOffline = true;\r\n\t\t} else {\r\n\t\t\t$('#videos-container').addClass('loader');\r\n\t\t\t$('#offline-image').hide();\r\n\t\t\t$scope.isPrivateChat = false;\r\n\t\t\t$scope.isGroupLive = false;\r\n\t\t\t$scope.isOffline = false;\r\n\t\t}\r\n\t});\r\n\tsocket.onModelInitPublicChat(function (data) {\r\n\t\t$scope.virtualRoom = data.broadcastid;\r\n\r\n\t\t$scope.isPrivateChat = false;\r\n\t\t$scope.isGroupLive = false;\r\n\t\t// if($('#offline-image').length > 0){\r\n\t\t$('#offline-image').hide();\r\n\t\t// }\r\n\t\t//$scope.joinBroadcast($scope.roomId, data.broadcastid);\r\n\t\t$('#videos-container').addClass('loader');\r\n\t\t$timeout(function () {\r\n\t\t\tconst isLoading = $('#videos-container').hasClass('loader');\r\n\t\t\tif(isLoading){\r\n\t\t\t\tlocation.reload();\r\n\t\t\t}\r\n\t\t}, 7000);\r\n\r\n\t});\r\n\r\n\t$scope.isShowPrivateMessage = false;\r\n\r\n\tsocket.on('model-private-status', function (data) {\r\n    //      console.log(data);\r\n\r\n    if (PerformerChat && data.modelId == PerformerChat.model_id) {\r\n\t\t\t$scope.isPrivateChat = data.isStreaming;\r\n\t\t\t$scope.isOffline = true;\r\n\t\t\tif (data.isStreaming) {\r\n\t\t\t\tif ($('#offline-image').length > 0) {\r\n\r\n\t\t\t\t\t$('#offline-image').hide();\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ($('#offline-image').length > 0) {\r\n\r\n\t\t\t\t\t$('#offline-image').show();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif ($scope.streamingInfo.type == 'private' && !data.isStreaming) {\r\n\t\t\tif (!$scope.isShowPrivateMessage) {\r\n\t\t\t\t// alertify.error('Model stopped video call.', 30);\r\n\t\t\t\t$scope.isShowPrivateMessage = true;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\tsocket.on('member-missing-tokens', function (chatType) {\r\n\t\t// console.log(chatType);\r\n\t\tif (chatType == 'private') {\r\n\t\t\talertify.warning('User tokens do not enough, private chat have disconnected');\r\n\t\t\tsocket.emit('model-leave-room');\r\n\t\t\t$timeout(function () {\r\n\t\t\t\twindow.location.href = appSettings.BASE_URL + 'models/live';\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t});\r\n\r\n\tsocket.on('disconnectAll', function (data) {\r\n\t\tif (appSettings.CHAT_ROOM_ID != data.id && data.ownerId == appSettings.USER.id) {\r\n\t\t\tvar modalInstance = $uibModal.open({\r\n\t\t\t\tanimation: true,\r\n\t\t\t\ttemplateUrl: appSettings.BASE_URL + 'app/modals/close-modal/modal.html?v=' + Math.random().toString(36).slice(2),\r\n\t\t\t\tcontroller: 'modalCloseCtrl',\r\n\t\t\t\tbackdrop: 'static',\r\n\t\t\t\tkeyboard: false\r\n\t\t\t});\r\n\t\t\tmodalInstance.result.then(function (res) {\r\n\t\t\t\twindow.location.reload();\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n  var timeoutVideo = null;\r\n  var steamId = null;\r\n\t$scope.connectionNow = null;\r\n\t// initializing RTCMultiConnection constructor.\r\n\t$scope.isStreaming = null;\r\n  $scope.currentConnectStart = null;\r\n\tfunction initRTCMultiConnection(userid) {\r\n   \t  var connection = new RTCMultiConnection();\r\n   \t  // connection.resources.firebaseio = 'https://xcamsv2.firebaseIO.com/';;\r\n   \t  // connection.enableLogs = true;\r\n      // connection.socketURL = appSettings.SOCKET_URL + '/';\r\n      // connection.socketOptions = {\r\n      //   'query': commonHelper.obToquery({token: appSettings.TOKEN}),\r\n      //   path: '/socket.io-client'\r\n      // };\r\n      connection.socketURL = 'https://rtcmulticonnection.herokuapp.com:443/';\r\n\r\n\r\n    connection.socketMessageEvent = 'video-broadcast-demo';\r\n    $scope.connectionNow = connection;\r\n    connection.getExternalIceServers = false;\r\n    connection.videosContainer  = document.getElementById('videos-container');\r\n    connection.channel = connection.sessionid = connection.userid = userid || connection.userid;\r\n\r\n    connection.sdpConstraints.mandatory = {\r\n      OfferToReceiveAudio: true,\r\n      OfferToReceiveVideo: true\r\n    };\r\n\r\n\r\n    connection.onMediaError = function (error) {\r\n      //              JSON.stringify(error)\r\n\r\n      alertify.alert('Warning', error.message);\r\n    };\r\n\r\n      connection.onstream = function (event) {\r\n        const numOfVideos = connection.videosContainer.childElementCount;\r\n        if(numOfVideos > 0){\r\n          return true;\r\n\t\t\t\t}\r\n        if (connection.isInitiator && event.type !== 'local') {\r\n          return;\r\n\t\t\t\t}\r\n        event.mediaElement.removeAttribute('src');\r\n        event.mediaElement.removeAttribute('srcObject');\r\n\r\n        connection.isUpperUserLeft = false;\r\n\r\n        if (event.type == 'local' && $scope.streamingInfo.type == 'public') {\r\n          var timeout = null;\r\n          var i = 0;\r\n\r\n          var initNumber = 1;\r\n          var capture = function capture() {\r\n\t\t\t\t\t\tconsole.log('4 ', event);\r\n            connection.takeSnapshot(event.userid, function (snapshot) {\r\n\r\n              $http.post(appSettings.BASE_URL + 'api/v1/rooms/' + appSettings.CHAT_ROOM_ID + '/setImage', {\r\n                base64: snapshot,\r\n                shotNumber: initNumber\r\n              });\r\n            });\r\n            initNumber = initNumber < 6 ? initNumber + 1 : 1;\r\n\r\n            timeout = setTimeout(capture, 30000);\r\n          };\r\n          // capture(); // will review it later\r\n\t\t\t\t\tconsole.log('5 ', event);\r\n          $scope.$on('destroy', function () {\r\n            clearTimeout(timeout);\r\n            clearTimeout(timeoutVideo);\r\n            i = 0;\r\n          });\r\n          var recordingInterval = 10000;\r\n//          var recordSteam = function recordSteam() {\r\n//            var recorder = {\r\n//              video: RecordRTC(event.stream, {\r\n//                type: 'video'\r\n//              })\r\n//            };\r\n//\r\n//            recorder.video.startRecording();\r\n//\r\n//            connection.streamEvents[event.streamid].recorder = recorder;\r\n//          };\r\n//          timeoutVideo = setTimeout(function(){\r\n//              recordSteam();\r\n//           var recordToServer = function recordToServer() {\r\n//            i++;\r\n//             var recorder = connection.streamEvents[event.streamid].recorder;\r\n//            recorder.video.stopRecording(function (singleWebM) {\r\n//              var blog = this.getBlob();\r\n//               var formData = new FormData();\r\n//\r\n//              formData.append('video-filename', i + 'video-stream.webm');\r\n//              formData.append('video-blob', blog);\r\n//              formData.append('type', $scope.streamingInfo.type);\r\n//\r\n//              $http({\r\n//                method: 'POST',\r\n//                url: appSettings.BASE_URL + 'api/v1/rooms/' + appSettings.CHAT_ROOM_ID + '/recordVideo?userId=' + appSettings.USER.id + '&session=' + event.userid,\r\n//                headers: {'Content-Type': undefined},\r\n//                transformRequest: angular.identity,\r\n//                data: formData\r\n//\r\n//              }).then(function (err) {\r\n//\r\n//                recordSteam();\r\n//                timeoutVideo = setTimeout(recordToServer, recordingInterval);\r\n//              }, function () {\r\n//                recordSteam();\r\n//                timeoutVideo = setTimeout(recordToServer, recordingInterval);\r\n//              });\r\n//\r\n//            });\r\n//\r\n//          };\r\n//            timeoutVideo = setTimeout(recordToServer, recordingInterval);\r\n//\r\n//          },3000);\r\n        }\r\n\r\n         if (connection.isInitiator == false && event.type === 'remote') {\r\n          $scope.isStreaming = true;\r\n          connection.dontCaptureUserMedia = true;\r\n          connection.attachStreams = [event.stream];\r\n\r\n          connection.sdpConstraints.mandatory = {\r\n            OfferToReceiveAudio: true,\r\n            OfferToReceiveVideo: true\r\n          };\r\n          clearTimeout(reTimeoutRoom);\r\n          $('#offline-image').hide();\r\n          $('#videos-container').removeClass('loader');\r\n\t\t\t\t}\r\n        steamId = event.streamid;\r\n        var video = document.createElement('video');\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvideo.setAttributeNode(document.createAttribute('autoplay'));\r\n\t\t\t\t\tvideo.setAttributeNode(document.createAttribute('playsinline'));\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\tvideo.setAttribute('autoplay', true);\r\n\t\t\t\t\t\tvideo.setAttribute('playsinline', true);\r\n\t\t\t\t}\r\n\t\t\t\tif(event.type === 'local') {\r\n\t\t\t\t\tvideo.volume = 0;\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvideo.setAttributeNode(document.createAttribute('muted'));\r\n\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\tvideo.setAttribute('muted', true);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvideo.srcObject = event.stream;\r\n\t\t\t\tvar width = parseInt(connection.videosContainer.clientWidth);\r\n\t\t\t\t$scope.isStreaming = true;\r\n\t\t\t\tvar mediaElement = getHTMLMediaElement(video, {\r\n\t\t\t\t\t\ttitle: '',\r\n\t\t\t\t\t\tbuttons: [],\r\n\t\t\t\t\t\twidth: width,\r\n\t\t\t\t\t\tshowOnMouseEnter: false\r\n\t\t\t\t});\r\n\t\t\t\tconnection.videosContainer.appendChild(mediaElement);\r\n\t\t\t\tmediaElement.id = event.streamid;\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tmediaElement.media.play();\r\n\t\t\t\t}, 5000);\r\n      };\r\n    //disable log\r\n    connection.enableLogs = false;\r\n    return connection;\r\n  }\r\n   socket.on('broadcast-stopped', function () {\r\n        console.log('Broadcast has been stopped.');\r\n        $('#offline-image').show();\r\n        $('#videos-container').removeClass('loader');\r\n      });\r\n\r\n\r\n\t// this RTCMultiConnection object is used to connect with existing users\r\n\tvar connection = initRTCMultiConnection();\r\n\r\n\r\n\t$scope.initRoom = function (roomId, virtualRoom) {\r\n\t\t$scope.roomId = roomId;\r\n\t\t$scope.virtualRoom = virtualRoom;\r\n\r\n\t\t//get model streaming\r\n\t\tsocket.emit('join-broadcast', {\r\n\t\t\tbroadcastid: $scope.virtualRoom,\r\n\t\t\troom: $scope.roomId,\r\n\t\t\tuserid: connection.userid,\r\n\t\t\topenBroadcast: false,\r\n\t\t\ttypeOfStreams: {\r\n\t\t\t\tvideo: false,\r\n\t\t\t\tscreen: false,\r\n\t\t\t\taudio: false,\r\n\t\t\t\toneway: true\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\t// ask node.js server to look for a broadcast\r\n\t// if broadcast is available, simply join it. i.e. \"join-broadcaster\" event should be emitted.\r\n\t// if broadcast is absent, simply create it. i.e. \"start-broadcasting\" event should be fired.\r\n\t// TODO - model side should start broadcasting and member/client side should join only\r\n  $scope.openBroadcast = function (room, virtualRoom) {\r\n    $scope.roomId = room;\r\n    $scope.virtualRoom = virtualRoom;\r\n    //TODO - hide start button\r\n\r\n\t\tconnection.session = {\r\n\t\t\tvideo: true,\r\n\t\t\tscreen: false,\r\n\t\t\taudio: true,\r\n\t\t\toneway: true\r\n\t\t};\r\n\r\n\t\tsocket.emit('join-broadcast', {\r\n\t\t\tbroadcastid: $scope.virtualRoom,\r\n\t\t\troom: $scope.roomId,\r\n\t\t\tuserid: connection.userid,\r\n\t\t\ttypeOfStreams: connection.session,\r\n\t\t\topenBroadcast: true\r\n\t\t});\r\n\t\t// $scope.isStreaming = true;\r\n    $('#startStream_' + room).hide();\r\n\t};\r\n\r\n\t/**\r\n  * join broadcast directly, use for member side\r\n  */\r\n\r\n\t$scope.joinBroadcast = function (room, virtualRoom) {\r\n        //count online member\r\n        threadId = room;\r\n        reCountMember();\r\n\t\t//check model is online / streaming then open broadcast.\r\n\t\tsocket.emit('has-broadcast', virtualRoom, function (has) {\r\n\r\n\t\t\tif (!has) {\r\n\t\t\t\t//TODO - should show nice alert message\r\n\t\t\t\t$('#offline-image').show();\r\n        //       $scope.isOffline = true;\r\n\t\t\t\t$('#videos-container').removeClass('loader');\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\t$scope.isPrivateChat = false;\r\n\t\t\t$scope.isGroupLive = false;\r\n\t\t\t$scope.isOffline = false;\r\n\r\n\t\t\t$scope.roomId = room;\r\n\t\t\t$scope.virtualRoom = virtualRoom;\r\n\t\t\t//TODO - check model room is open or not first?\r\n\t\t\tconnection.session = {\r\n\t\t\t\tvideo: true,\r\n\t\t\t\tscreen: false,\r\n\t\t\t\taudio: true,\r\n\t\t\t\toneway: true\r\n\t\t\t};\r\n\t\t\tsocket.emit('join-broadcast', {\r\n\t\t\t\tbroadcastid: $scope.virtualRoom,\r\n\t\t\t\troom: $scope.roomId,\r\n\t\t\t\tuserid: connection.userid,\r\n\t\t\t\ttypeOfStreams: connection.session\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n  $scope.privateChatRoom = null;\r\n\r\n\r\n\t// this event is emitted when a broadcast is already created.\r\n// this event is emitted when a broadcast is already created.\r\n  socket.on('join-broadcaster', function (broadcaster, typeOfStreams) {\r\n    console.log('join-broadcaster');\r\n    connection.session = typeOfStreams;\r\n    connection.channel = connection.sessionid = broadcaster.userid;\r\n\r\n    connection.sdpConstraints.mandatory = {\r\n\t\t\tOfferToReceiveVideo: true,\r\n\t\t\tOfferToReceiveAudio: true\r\n    };\r\n      (function reCheckRoomPresence() {\r\n\r\n             socket.emit('check-broadcast-presence', broadcaster.broadcastid, function (isRoomExists) {\r\n\r\n              if (isRoomExists) {\r\n                setTimeout(function () {\r\n\r\n                  connection = initRTCMultiConnection();\r\n                  connection.session = typeOfStreams;\r\n                  $scope.broadcaster = broadcaster;\r\n\r\n                  connection.channel = connection.sessionid = broadcaster.userid;\r\n\r\n                  connection.sdpConstraints.mandatory = {\r\n                    OfferToReceiveVideo: true,\r\n                    OfferToReceiveAudio: true\r\n                  };\r\n                  connection.join(broadcaster.userid, {\r\n                    userid: broadcaster.userid,\r\n                    extra: {},\r\n                    session: connection.session\r\n                  });\r\n\r\n                }, 1000);\r\n                if($scope.isStreaming){\r\n                  return;\r\n                }\r\n              }\r\n              if (connection) {\r\n                connection.close();\r\n              }\r\n              reTimeoutRoom = setTimeout(reCheckRoomPresence, 5000);\r\n            });\r\n          })();\r\n\r\n      $scope.isStreaming = true;\r\n    });\r\n\r\n\t// this event is emitted when a broadcast is absent.\r\n\tsocket.on('start-broadcasting', function (typeOfStreams) {\r\n\r\n     console.log('start-broadcasting');\r\n\t\t// host i.e. sender should always use this!\r\n\t\tconnection.sdpConstraints.mandatory = {\r\n\t\t\tOfferToReceiveVideo: false,\r\n\t\t\tOfferToReceiveAudio: false\r\n\t\t};\r\n\r\n\t\tconnection.session = typeOfStreams;\r\n\t\tconnection.dontTransmit = true;\r\n    connection.open(connection.userid);\r\n//    if($scope.currentConnectStart){\r\n//      connection.close();\r\n//    }else{\r\n//      $scope.currentConnectStart = true;\r\n//    }\r\n\r\n//\t\tif (connection.broadcastingConnection) {\r\n//\t\t\t// if new person is given the initiation/host/moderation control\r\n//\t\t\tconnection.close();\r\n//\t\t\tconnection.broadcastingConnection = null;\r\n//\t\t}\r\n\t});\r\n  var i = 0;\r\n  socket.on('model-left', function () {\r\n      //close connect if model live\\\r\n      console.log('model-left',i);\r\n      i++;\r\n      $('#offline-image').show();\r\n      $('#videos-container').removeClass('loader');\r\n      if (!appSettings.USER || appSettings.USER.role != 'model') {\r\n      \t $scope.connectionNow.close();\r\n        connection.videosContainer.innerHTML = '';\r\n        connection.close();\r\n        $scope.isStreaming = false;\r\n      }\r\n    });\r\n\r\n\tsocket.on('broadcast-error', function (data) {\r\n\t\tif (!appSettings.USER || appSettings.USER.role != 'model') {\r\n      console.log('broadcast-error');\r\n\t\t\talertify.alert('Warning', data.msg);\r\n\t\t}\r\n\t\t$scope.isStreaming = false;\r\n\t});\r\n\r\n\t//rejoin event\r\n    socket.on('rejoin-broadcast', function (data) {\r\n\r\n      if (!appSettings.USER || appSettings.USER.role != 'model') {\r\n\r\n      socket.emit('check-broadcast-presence', data.id, function (isBroadcastExists) {\r\n        setTimeout(function () {\r\n\r\n          console.log('connection.session',connection.session);\r\n          connection.attachStreams = [];\r\n\r\n              socket.emit('join-broadcast', {\r\n                broadcastid: data.id,\r\n                room: data.room,\r\n                userid: connection.userid,\r\n                typeOfStreams: connection.typeOfStreams\r\n              });\r\n\r\n\r\n\r\n        }, 1000);\r\n\r\n      });\r\n    }\r\n//\t\tsocket.emit('join-broadcast', {\r\n//\t\t\tbroadcastid: data.id,\r\n//\t\t\troom: data.room,\r\n//\t\t\tuserid: connection.userid,\r\n//\t\t\ttypeOfStreams: connection.typeOfStreams\r\n//\t\t});\r\n    });\r\n\r\n\tfunction beep() {\r\n\t\tconst unique = new Date().getTime();\r\n\t\tvar snd = new Audio(\"/sounds/received_message.mp3?v=\" + unique);\r\n\t\tsnd.play();\r\n\t}\r\n\r\n\t$scope.sendTip = function (roomId, chatType) {\r\n\r\n\t\talertify.prompt(\"Enter your tips.\", '', function (evt, value) {\r\n\t\t\tif (angular.isNumber(parseInt(value)) && parseInt(value) > 0) {\r\n        chatService.sendTipTokens(roomId, parseInt(value)).then(function (response) {\r\n\t\t\t\t\tif (response.data.success == false) {\r\n            return alertify.warning(response.data.message);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\talertify.success(response.data.message);\r\n\t\t\t\t\t\t$scope.streamingInfo.spendTokens += parseInt(value);\r\n\t\t\t\t\t\t$scope.streamingInfo.tokens -= parseInt(value);\r\n\r\n\t\t\t\t\t\tvar sendObj = {\r\n\t\t\t\t\t\t\troomId: roomId,\r\n\t\t\t\t\t\t\ttext: 'Send ' + parseInt(value) + ' tokens',\r\n              type: chatType\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\t//emit chat event to server\r\n\t\t\t\t\t\tsocket.sendTip(sendObj);\r\n\t\t\t\t\t\tsocket.sendModelReceiveInfo({ time: 0, tokens: value });\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\talertify.error('Please enter a number.');\r\n\t\t\t\t$scope.sendTip();\r\n\t\t\t}\r\n\t\t}).set('title', 'Tip');\r\n\t};\r\n\t$scope.backToFreeChat = function(modelId, url) {\r\n\t\tif (appSettings.USER && appSettings.USER.role == 'member') {\r\n\t      socket.emit('stop-video-request', \r\n\t      { \r\n\t        data: {\r\n\t          modelId: modelId,\r\n\t        } \r\n\t      });\r\n\t    }\r\n\t    return window.location.href = url;\r\n\t};\r\n\t/**\r\n  *\r\n  * @param {type} roomId\r\n  * @returns {undefined}\r\n  */\r\n\tsocket.onModelReceiveInfo(function (data) {\r\n\t\t// $scope.streamingInfo.tokens += parseInt(data.tokens);\r\n\t\tif ($scope.streamingInfo.type == 'private' && appSettings.USER && appSettings.USER.role == 'model') {\r\n\t\t\t$scope.streamingInfo.tokensReceive += parseInt(data.tokens);\r\n\t\t\t$scope.streamingInfo.time += parseInt(data.time);\r\n\t\t}\r\n\t});\r\n\t/*\r\n if (!appSettings.USER || appSettings.USER.id != PerformerChat.model_id) {\r\n \t//event get current model online\r\n \tsocket.getCurrentModelOnline(appSettings.CHAT_ROOM_ID);\r\n\r\n \t//event receive current model online or offline (return undefined)\r\n \t$scope.modelOnline = null;\r\n \tsocket.onCurrentModelOnline(function (data) {\r\n \t\t$scope.modelOnline = _.find(data, _.matchesProperty('id', PerformerChat.model_id));\r\n\r\n \t\tif (!$scope.modelOnline || typeof $scope.modelOnline == 'undefined') {\r\n \t\t\talertify.notify('Model is offline.');\r\n \t\t\t$scope.isOffline = true;\r\n \t\t\tif($('#offline-image').length > 0){\r\n \t\t\t\t\t$('#offline-image').show();\r\n \t\t\t}\r\n \t\t\t$('#videos-container').removeClass('loader');\r\n\r\n \t\t}\r\n \t});\r\n }*/\r\n\r\n    $scope.stopStreaming = function () {\r\n      $scope.connectionNow.close();\r\n      connection.videosContainer.innerHTML = '';\r\n      connection.autoCloseEntireSession = true;\r\n      $scope.connectionNow.close();\r\n      $scope.isStreaming = false;\r\n      //call an event to socket\r\n      socket.emit('model-leave-room');\r\n      location.reload();\r\n    };\r\n\r\n\t$scope.changeStreaming = function (modelId, type) {\r\n\t\tchatSettingService.getChatPrice(modelId, type).success(function (cost) {\r\n\t\t\tvar message = type == 'group' ? 'Group chat will take you ' + cost + ' tokens each minute' : 'Private chat will take you ' + cost + ' tokens each minute';\r\n\t\t\talertify.confirm(message, function () {\r\n\t\t\t\tif (type == 'group') {\r\n\t\t\t\t\treturn window.location.href = appSettings.BASE_URL + 'members/groupchat/' + modelId;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn window.location.href = appSettings.BASE_URL + 'members/privatechat/' + modelId;\r\n\t\t\t\t}\r\n\t\t\t}).set('title', 'Confirm');\r\n\t\t});\r\n\t};\r\n\r\n\t//model's status\r\n\t$scope.statusForUpdating = '';\r\n\t$scope.modelStatus = '';\r\n\tif (appSettings.USER && appSettings.USER.role == 'model') {\r\n\t\tuserService.get().success(function(data){\r\n\t\t\t$scope.statusForUpdating = data.status;\r\n\t\t});\r\n\t}\r\n\t$scope.updateStatus = function(form){\r\n\t\tsocket.emit('updateModelStatus', {\r\n\t\t\tuserId: appSettings.USER.id,\r\n\t\t\troomId: $scope.roomId,\r\n\t\t\tstatus: $scope.statusForUpdating\r\n\t\t}, function() {\r\n\t\t\talertify.success('Updated successfully');\r\n\t\t});\r\n\t};\r\n\tsocket.on('updateModelStatus', function(data){\r\n\t\t$scope.modelStatus = data.status;\r\n\t});\r\n\r\n\t// show full screen\r\n\t$scope.isFullScreenMode = false;\r\n\t$scope.showFullScreen = function() {\r\n\t\t$scope.isFullScreenMode = true;\r\n\t\t$('.header').addClass('hidden');\r\n\t\t$('.line-menu').addClass('hidden');\r\n\t\t$('.footer').addClass('hidden');\r\n\t\t$('body').addClass('fullscreen-mode');\r\n        $('.top-detial').addClass('hidden');\r\n        $('.model-detail-section').addClass('hidden');\r\n\t\t$scope.isFullScreenMode = true;\r\n\t};\r\n\t$scope.notShowFullScreen = function() {\r\n\t\t$scope.isFullScreenMode = false;\r\n\t\t$('.header').removeClass('hidden');\r\n\t\t$('.line-menu').removeClass('hidden');\r\n\t\t$('.footer').removeClass('hidden');\r\n        $('.top-detial').removeClass('hidden');\r\n\t\t$('body').removeClass('fullscreen-mode');\r\n        $('.model-detail-section').removeClass('hidden');\r\n\t};\r\n\t\r\n}]);\r\n","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('likesWidgetCtrl', [ '$scope', 'appSettings', 'likesWidgetService', function ($scope, appSettings, likesWidgetService) {\r\n\r\n  $scope.init = function (itemId, item)\r\n  {\r\n    $scope.itemId = itemId;\r\n    $scope.item = item;\r\n    likesWidgetService.count({itemId: $scope.itemId, item: $scope.item}).success(function (data, status, headers, config) {\r\n      $scope.totalLikes = data;\r\n    });\r\n    //check like status\r\n    likesWidgetService.checkMe({itemId: $scope.itemId, item: $scope.item}).success(function (data, status, headers, config) {\r\n      $scope.liked = data;\r\n    });\r\n  };\r\n\r\n  $scope.likeThis = function () {\r\n    likesWidgetService.likeMe({itemId: $scope.itemId, status: $scope.liked, item: $scope.item}).then(function (data, status, headers, config) {\r\n      if (data.data.status == 'error') {\r\n        alertify.warning(data.data.message);\r\n        return;\r\n      }\r\n      $scope.liked = (data.data.status == 'like') ? 1 : 0;\r\n      likesWidgetService.count({itemId: $scope.itemId, item: $scope.item}).success(function (data, status, headers, config) {\r\n        $scope.totalLikes = data;\r\n      });\r\n    });\r\n  };\r\n\r\n}]);","/*\r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelProfileImageCtrl', function ($scope, $uibModal, appSettings, mediaService, userService) {\r\n\r\n  $scope.currentPage = 1;\r\n  var lastPage = 1;\r\n  $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n  $scope.orderBy = 'createdAt';\r\n  $scope.sort = 'desc';\r\n\r\n  $scope.myImages = [];\r\n\r\n  $scope.loadMoreInfinite = false;\r\n\r\n  mediaService.findProfileByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', mediaType: 'profile'}).success(function (data) {\r\n    $scope.myImages = data.data;\r\n    $scope.currentPage = data.current_page;\r\n    if (lastPage < data.last_page) {\r\n      lastPage = lastPage + 1;\r\n      $scope.loadMoreInfinite = true;\r\n    }\r\n  });\r\n\r\n//make profile\r\n  $scope.makeProfile = function (index, id) {\r\n    userService.setProfile(id).then(function (data) {\r\n      if (data.data.success) {\r\n        alertify.success(data.data.message);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  };\r\n  //delete image\r\n  $scope.deleteModelImage = function (key, id) {\r\n    alertify.confirm('Are you sure you want to delete this?', function () {\r\n      mediaService.deleteImage(id).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          $scope.myImages.splice(key, 1);\r\n        } else {\r\n          alertify.error(data.data.error);\r\n        }\r\n      });\r\n    }).set('title', 'Confirm');\r\n\r\n\r\n  };\r\n//load more\r\n  $(window).scroll(function () {\r\n    if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n      mediaService.findProfileByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', mediaType: 'profile'}).success(function (data) {\r\n        lastPage = lastPage + 1;\r\n\r\n\r\n        $scope.myImages = $scope.myImages.concat(data.data);\r\n\r\n\r\n\r\n        if (lastPage > data.last_page) {\r\n\r\n          $scope.loadMoreInfinite = false;\r\n        }\r\n      });\r\n    }\r\n  });\r\n  ///call upload model\r\n\r\n  $scope.showUploadModal = function (size) {\r\n    var modalInstance = $uibModal.open({\r\n      animation: true,\r\n      templateUrl: appSettings.BASE_URL + 'app/modals/model-multiple-upload/multiple-upload.html?v=' + Math.random().toString(36).slice(2),\r\n      controller: 'ModalUploadInstanceCtrl',\r\n      size: size,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      resolve: {\r\n        type: function () {\r\n          return 'image';\r\n        },\r\n        mediaType: function () {\r\n          return 'profile';\r\n        },\r\n        parentId: function () {\r\n          return 0;\r\n        },\r\n        modelId: function () {\r\n          return appSettings.USER.id;\r\n        }\r\n      }\r\n\r\n    });\r\n    modalInstance.result.then(function (data) {\r\n      for (var i in data) {\r\n        $scope.myImages.push(data[i]);\r\n      }\r\n    });\r\n  };\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoCtrl', function ($scope, $uibModal, appSettings, mediaService, userService) {\r\n\r\n  $scope.currentPage = 1;\r\n  var lastPage = 1;\r\n  $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n  $scope.orderBy = 'createdAt';\r\n  $scope.sort = 'desc';\r\n\r\n  $scope.myVideos = [];\r\n\r\n  $scope.loadMoreInfinite = false;\r\n\r\n  mediaService.findByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n    $scope.myVideos = data.data;\r\n    $scope.currentPage = data.current_page;\r\n    if (lastPage < data.last_page) {\r\n      lastPage = lastPage + 1;\r\n      $scope.loadMoreInfinite = true;\r\n    }\r\n  });\r\n\r\n  //delete image\r\n  $scope.deleteModelImage = function (key, id) {\r\n    alertify.confirm('Are you sure you want to delete this?', function () {\r\n      mediaService.deleteFile(id).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          $scope.myVideos.splice(key, 1);\r\n        } else {\r\n          alertify.error(data.data.error);\r\n        }\r\n      });\r\n    }).set('title', 'Confirm');\r\n\r\n\r\n  };\r\n//load more\r\n  $scope.loadMoreImages = function () {\r\n\r\n    if ($scope.loadMoreInfinite == true) {\r\n      mediaService.findByMe({page: lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n        lastPage = lastPage + 1;\r\n\r\n\r\n        $scope.myVideos = $scope.myVideos.concat(data.data);\r\n\r\n\r\n\r\n        if (lastPage > data.last_page) {\r\n\r\n          $scope.loadMoreInfinite = false;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  ///call upload model\r\n\r\n  $scope.showUploadModal = function (size) {\r\n    var modalInstance = $uibModal.open({\r\n      animation: true,\r\n      templateUrl: appSettings.BASE_URL + 'app/modals/model-upload-images/upload-images.html?v=' + Math.random().toString(36).slice(2),\r\n      controller: 'ModalUploadInstanceCtrl',\r\n      size: size,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      resolve: {\r\n        type: function () {\r\n          return 'video';\r\n        },\r\n        mediaType: function () {\r\n          return 'video';\r\n        }\r\n      }\r\n\r\n    });\r\n    modalInstance.result.then(function (data) {\r\n      for (var i in data) {\r\n        $scope.myVideos.push(data[i]);\r\n      }\r\n    });\r\n  };\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelProfileCtrl', function ($scope, appSettings, userService, countryService, categoryService) {\r\n\r\n  $scope.profile = [];\r\n  $scope.performer = [];\r\n  $scope.countries = [];\r\n  $scope.states = [];\r\n  $scope.cities = [];\r\n\r\n  userService.get().then(function (data) {\r\n    $scope.profile = data.data;\r\n  });\r\n  userService.getPerformer().then(function (data) {\r\n    $scope.performer = data.data;\r\n    $scope.performer.category_id = parseInt($scope.performer.category_id);\r\n    $scope.performer.age = (parseInt($scope.performer.age) > 0 ) ? parseInt($scope.performer.age) : null;\r\n    $scope.performer.city_id = parseInt($scope.performer.city_id);\r\n    $scope.performer.countryId = parseInt($scope.performer.countryId);\r\n    $scope.performer.country_id = parseInt($scope.performer.country_id);\r\n//    $scope.performer.height = parseInt($scope.performer.height);\r\n    $scope.performer.parentId = parseInt($scope.performer.parentId);\r\n    $scope.performer.stateId = parseInt($scope.performer.stateId);\r\n    $scope.performer.state_id = parseInt($scope.performer.state_id);\r\n    $scope.performer.user_id = parseInt($scope.performer.user_id);\r\n    $scope.performer.tokens = parseInt($scope.performer.tokens);\r\n    \r\n    \r\n    if (data.data.languages != '') {\r\n      $scope.performer.languages = data.data.languages.split(', ');\r\n    }\r\n    countryService.getCountries().then(function (data) {\r\n      $scope.countries = data.data;\r\n    });\r\n    countryService.getStates($scope.performer.country_id).then(function (data) {\r\n      $scope.states = data.data;\r\n    });\r\n    countryService.getCities($scope.performer.state_id).then(function (data) {\r\n      $scope.cities = data.data;\r\n    });\r\n  });\r\n  $scope.ages = [];\r\n\r\n  $scope.init = function () {\r\n    var i;\r\n    for (i = 18; i <= 59; i++) {\r\n      $scope.ages.push(i);\r\n    }\r\n    $scope.heightList = [\r\n      {\r\n        value: 140,\r\n        text: '4.6 (140 cm)'\r\n      },\r\n      {\r\n        value: 141,\r\n        text: '4.6 (141 cm)'\r\n      },\r\n      {\r\n        value: 142,\r\n        text: '4.7 (142 cm)'\r\n      },\r\n      {\r\n        value: 143,\r\n        text: '4.7 (143 cm)'\r\n      }\r\n      ,\r\n      {\r\n        value: 144,\r\n        text: '4.7 (144 cm)'\r\n      },\r\n      {\r\n        value: 145,\r\n        text: '4.8 (145 cm)'\r\n      },\r\n      {\r\n        value: 146,\r\n        text: '4.8 (146 cm)'\r\n      },\r\n      {\r\n        value: 147,\r\n        text: '4.8 (147 cm)'\r\n      },\r\n      {\r\n        value: 148,\r\n        text: '4.9 (148 cm)'\r\n      },\r\n      {\r\n        value: 149,\r\n        text: '4.9 (149 cm)'\r\n      },\r\n      {\r\n        value: 150,\r\n        text: '4.9 (150 cm)'\r\n      },\r\n      {\r\n        value: 151,\r\n        text: '5.0 (151 cm)'\r\n      },\r\n      {\r\n        value: 152,\r\n        text: '5.0 (152 cm)'\r\n      },\r\n      {\r\n        value: 153,\r\n        text: '5.0 (153 cm)'\r\n      },\r\n      {\r\n        value: 154,\r\n        text: '5.1 (154 cm)'\r\n      },\r\n      {\r\n        value: 155,\r\n        text: '5.1 (155 cm)'\r\n      },\r\n      {\r\n        value: 156,\r\n        text: '5.1 (156 cm)'\r\n      },\r\n      {\r\n        value: 157,\r\n        text: '5.1 (157 cm)'\r\n      },\r\n      {\r\n        value: 158,\r\n        text: '5.2 (158 cm)'\r\n      },\r\n      {\r\n        value: 159,\r\n        text: '5.2 (159 cm)'\r\n      },\r\n      {\r\n        value: 160,\r\n        text: '5.2 (160 cm)'\r\n      },\r\n      {\r\n        value: 161,\r\n        text: '5.3 (161 cm)'\r\n      },\r\n      {\r\n        value: 162,\r\n        text: '5.3 (162 cm)'\r\n      },\r\n      {\r\n        value: 163,\r\n        text: '5.3 (163 cm)'\r\n      },\r\n      {\r\n        value: 164,\r\n        text: '5.4 (164 cm)'\r\n      },\r\n      {\r\n        value: 165,\r\n        text: '5.4 (165 cm)'\r\n      },\r\n      {\r\n        value: 166,\r\n        text: '5.4 (166 cm)'\r\n      },\r\n      {\r\n        value: 167,\r\n        text: '5.5 (167 cm)'\r\n      },\r\n      {\r\n        value: 168,\r\n        text: '5.5 (168 cm)'\r\n      },\r\n      {\r\n        value: 169,\r\n        text: '5.5 (169 cm)'\r\n      },\r\n      {\r\n        value: 170,\r\n        text: '5.6 (170 cm)'\r\n      },\r\n      {\r\n        value: 171,\r\n        text: '5.6 (171 cm)'\r\n      },\r\n      {\r\n        value: 172,\r\n        text: '5.6 (172 cm)'\r\n      },\r\n      {\r\n        value: 173,\r\n        text: '5.7 (173 cm)'\r\n      },\r\n      {\r\n        value: 174,\r\n        text: '5.7 (174 cm)'\r\n      },\r\n      {\r\n        value: 175,\r\n        text: '5.7 (175 cm)'\r\n      },\r\n      {\r\n        value: 176,\r\n        text: '5.8 (176 cm)'\r\n      },\r\n      {\r\n        value: 177,\r\n        text: '5.8 (177 cm)'\r\n      },\r\n      {\r\n        value: 178,\r\n        text: '5.8 (178 cm)'\r\n      },\r\n      {\r\n        value: 179,\r\n        text: '5.9 (179 cm)'\r\n      },\r\n      {\r\n        value: 180,\r\n        text: '5.9 (180 cm)'\r\n      },\r\n      {\r\n        value: 181,\r\n        text: '5.9 (181 cm)'\r\n      },\r\n      {\r\n        value: 182,\r\n        text: '6.0 (182 cm)'\r\n      },\r\n      {\r\n        value: 183,\r\n        text: '6.0 (183 cm)'\r\n      },\r\n      {\r\n        value: 184,\r\n        text: '6.0 (184 cm)'\r\n      },\r\n      {\r\n        value: 185,\r\n        text: '6.1 (185 cm)'\r\n      },\r\n      {\r\n        value: 186,\r\n        text: '6.1 (186 cm)'\r\n      },\r\n      {\r\n        value: 187,\r\n        text: '6.1 (187 cm)'\r\n      },\r\n      {\r\n        value: 188,\r\n        text: '6.2 (188 cm)'\r\n      },\r\n      {\r\n        value: 189,\r\n        text: '6.2 (189 cm)'\r\n      },\r\n      {\r\n        value: 190,\r\n        text: '6.2 (190 cm)'\r\n      },\r\n      {\r\n        value: 191,\r\n        text: '6.3 (191 cm)'\r\n      },\r\n      {\r\n        value: 192,\r\n        text: '6.3 (192 cm)'\r\n      },\r\n      {\r\n        value: 193,\r\n        text: '6.3 (193 cm)'\r\n      },\r\n      {\r\n        value: 194,\r\n        text: '6.4 (194 cm)'\r\n      },\r\n      {\r\n        value: 195,\r\n        text: '6.4 (195 cm)'\r\n      },\r\n      {\r\n        value: 196,\r\n        text: '6.4 (196 cm)'\r\n      },\r\n      {\r\n        value: 197,\r\n        text: '6.5 (197 cm)'\r\n      },\r\n      {\r\n        value: 198,\r\n        text: '6.5 (198 cm)'\r\n      },\r\n      {\r\n        value: 199,\r\n        text: '6.5 (199 cm)'\r\n      }\r\n    ];\r\n    $scope.publics = [\r\n      {\r\n        value: 'trimmed',\r\n        text: 'Trimmed'\r\n      },\r\n      {\r\n        value: 'shaved',\r\n        text: 'Shaved'\r\n      },\r\n      {\r\n        value: 'hairy',\r\n        text: 'Hairy'\r\n      },\r\n      {\r\n        value: 'no_comment',\r\n        text: 'No Comment'\r\n      }\r\n\r\n    ];\r\n    $scope.categories = [];\r\n    $scope.selectState = 'Select a State';\r\n    $scope.selectCity = 'Select a City';\r\n    if (!$scope.performer.country_id) {\r\n      $scope.selectState = 'Select a Country first';\r\n    }\r\n    if (!$scope.performer.state_id) {\r\n      $scope.selectCity = 'Select s State first';\r\n    }\r\n\r\n    categoryService.all().then(function (data) {\r\n      $scope.categories = data.data;\r\n    });\r\n  };\r\n  $scope.init();\r\n\r\n  $scope.changeCountry = function (countryId) {\r\n    if (countryId) {\r\n      $scope.selectState = 'Select a State';\r\n    } else {\r\n      $scope.selectState = 'Select a Country first';\r\n    }\r\n    countryService.getStates(countryId).then(function (data) {\r\n      $scope.states = data.data;\r\n    });\r\n  };\r\n  $scope.changeState = function (stateId) {\r\n    if (stateId) {\r\n      $scope.selectCity = 'Select a City';\r\n    } else {\r\n      $scope.selectCity = 'Select a State first';\r\n    }\r\n    countryService.getCities(stateId).then(function (data) {\r\n      $scope.cities = data.data;\r\n    });\r\n  };\r\n\r\n  $scope.errors = {\r\n    state: false,\r\n    city: false\r\n  };\r\n\r\n  $scope.formSubmitted = false;\r\n  $scope.savePerformerProfile = function (form) {\r\n\r\n    if (!$scope.performer.state_id && $scope.performer.state_name == '') {\r\n      $scope.errors.state = true;\r\n    } else {\r\n      $scope.errors.state = false;\r\n    }\r\n    if (!$scope.performer.city_id && $scope.performer.city_name == '') {\r\n      $scope.errors.city = true;\r\n\r\n    } else {\r\n      $scope.errors.city = false;\r\n    }\r\n    if ($scope.errors.state || $scope.errors.city) {\r\n      return;\r\n    }\r\n    if (form.$valid) {\r\n      $scope.formSubmitted = true;\r\n      userService.updatePerformer($scope.performer, {firstName: $scope.profile.firstName, lastName: $scope.profile.lastName, status: $scope.profile.status}).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          window.location.href = data.data.url;\r\n        } else {\r\n          $scope.formSubmitted = false;\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.checkLanguage = function (tag) {\r\n    var myRegEx = /^[a-zA-Z]+$/;\r\n    return myRegEx.test(tag.text);\r\n  };\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelCreateGalleryCtrl', function ($scope, galleryService, appSettings, mediaService) {\r\n\r\n  $scope.gallery = {\r\n    name: '',\r\n    description: '',\r\n    price: 100,\r\n    type: '',\r\n    status: 'public'\r\n  };\r\n\r\n\r\n  $scope.submitted = false;\r\n  $scope.errors = {};\r\n  \r\n  $scope.submitCreateGallery = function (form) {\r\n    if (form.$valid) {\r\n      $scope.submitted = true;\r\n      galleryService.create($scope.gallery).then(function (data) {\r\n        if (data.data.success) {\r\n            $scope.errors = {};\r\n          alertify.success(data.data.message);\r\n          window.location.href = data.data.url;\r\n        } else {\r\n          $scope.submitted = false;\r\n          $scope.errors = data.data.errors;\r\n          if(data.data.message){\r\n                alertify.alert(data.data.message).setHeader('Warning');\r\n            }\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.submitCreateImage = function (form, modelId) {\r\n    $scope.errors = {};\r\n    if(!$('#fileInputImage')[0].files.length) {\r\n      $scope.errors.image = 'Please select an image';\r\n      return false;\r\n    }\r\n    if (form.$valid) {\r\n      $scope.submitted = true;\r\n      var idModel = appSettings.USER.id;\r\n      if(modelId) {\r\n        $scope.gallery.model_id = modelId;\r\n        idModel = modelId;\r\n      }\r\n      return galleryService.create($scope.gallery)\r\n      .then(function (data) {\r\n        if (data.data.success) {\r\n          var formData = new FormData();\r\n          formData.append('myFiles', $('#fileInputImage')[0].files[0]); \r\n          return $.ajax({\r\n            url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=image&parent-id='+data.data.id+'&model-id=' + idModel,\r\n            data: formData,\r\n            type: 'POST',\r\n            contentType: false,\r\n            processData: false\r\n          });\r\n        } else {\r\n          return Promise.reject({\r\n            errors: data.data.errors,\r\n            message: data.data.message\r\n          });\r\n        }\r\n      })\r\n      .then(function(dataFile){\r\n        return mediaService.setMainImage(dataFile.file.id).then(function(){\r\n          return Promise.resolve(dataFile);\r\n        });\r\n      })\r\n      .then(function(dataFile){\r\n        return mediaService.setMediaStatus(dataFile.file.id, 'inactive');\r\n      })\r\n      .then(function(){\r\n        $scope.errors = {};\r\n        alertify.success('Create successfully');\r\n        if(!modelId) {\r\n          window.location.href = '/models/dashboard/media/image-galleries'; \r\n        }else {\r\n          window.location.href = '/admin/manager/image-gallery/'+modelId; \r\n        }\r\n      })\r\n      .catch(function(err){\r\n        $scope.submitted = false;\r\n        $scope.errors = err.errors;\r\n        alertify.alert(err.message).setHeader('Warning');\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelEditGalleryCtrl', function ($scope, galleryService, mediaService) {\r\n\r\n  $scope.gallery = {};\r\n  $scope.attachmentId = '';\r\n  $scope.initEdit = function (gallery, attachmentId) {\r\n    $scope.gallery = {\r\n      id: gallery.id,\r\n      description: gallery.description,\r\n      name: gallery.name,\r\n      price: parseInt(gallery.price),\r\n      type: gallery.type,\r\n      previewImage: gallery.previewImage,\r\n      status: gallery.status,\r\n      mediaMeta: gallery.mediaMeta\r\n    };\r\n    $scope.attachmentId = attachmentId;\r\n  };\r\n  if ($('#preview-image-uploader').length > 0) {\r\n    var priviewSetting = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'png,jpg,jpeg',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n          $scope.gallery.previewImage = data.file.id;\r\n          $('#previewImg').attr('src', appSettings.BASE_URL + data.file.path);\r\n          alertify.success(data.message);\r\n\r\n        } else {\r\n          alertify.error(data.message);\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#priviewImageStatus\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        mediaService.deleteFile(element.file.id).then(function (data) {\r\n          if (data.data.success) {\r\n            $scope.gallery.priviewImage = null;\r\n            alertify.success(data.data.message);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $(\"#preview-image-uploader\").uploadFile(priviewSetting);\r\n  }\r\n\r\n  $scope.errors = {};\r\n  $scope.submitUpdateGallery = function (form) {\r\n\r\n    if (form.$valid) {\r\n\r\n          galleryService.update($scope.gallery).then(function (data) {\r\n            if (data.data.success) {\r\n                $scope.errors = {};\r\n              alertify.success(data.data.message);\r\n              if (data.data.errors != '') {\r\n                alertify.warning(data.data.errors);\r\n              } else {\r\n                window.location.href = data.data.url;\r\n              }\r\n            } else {\r\n                $scope.errors = data.data.errors;\r\n                if(data.data.message){\r\n                    alertify.alert(data.data.message).setHeader('Warning');\r\n                }\r\n            }\r\n          });\r\n        \r\n\r\n    }\r\n  };\r\n\r\n  $scope.submitUpdateImage = function(form, modelId) {\r\n     if (form.$valid) {\r\n      var idModel = appSettings.USER.id;\r\n      if(modelId){\r\n        idModel = modelId;\r\n      }\r\n      return galleryService.update($scope.gallery).then(function (data) {\r\n        if (data.data.success) {\r\n          // if upload new image\r\n          if($('#fileInputImage')[0].files.length) {\r\n            var formData = new FormData();\r\n            formData.append('myFiles', $('#fileInputImage')[0].files[0]); \r\n            return $.ajax({\r\n              url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=image&parent-id='+$scope.gallery.id+'&model-id=' + idModel,\r\n              data: formData,\r\n              type: 'POST',\r\n              contentType: false,\r\n              processData: false\r\n            })\r\n            .then(function(dataFile){\r\n              return mediaService.setMainImage(dataFile.file.id)\r\n              .then(function(){\r\n                return mediaService.setMediaStatus(dataFile.file.id, 'inactive');\r\n              })\r\n              .then(function(){\r\n                // remove the old image\r\n                return mediaService.deleteImage($scope.attachmentId);\r\n              })\r\n              .then(function(){\r\n                $scope.errors = {};\r\n                alertify.success('Update successfully');\r\n                if(modelId){\r\n                  return window.location.href = '/admin/manager/image-gallery/'+modelId;   \r\n                }else {\r\n                  return window.location.href = '/models/dashboard/media/image-galleries';   \r\n                }\r\n              });\r\n            })\r\n          }else {\r\n            $scope.errors = {};\r\n            alertify.success('Update successfully');\r\n            if(modelId){\r\n              return window.location.href = '/admin/manager/image-gallery/'+modelId;   \r\n            }else {\r\n              window.location.href = '/models/dashboard/media/image-galleries'; \r\n            }\r\n          }\r\n        } else {\r\n            $scope.errors = data.data.errors;\r\n            if(data.data.message){\r\n                alertify.alert(data.data.message).setHeader('Warning');\r\n            }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelImageGalleryCtrl', function ($scope, galleryService, mediaService, appSettings, $uibModal, earningService) {\r\n\r\n  $scope.currentPage = 1;\r\n  $scope.lastPage = 1;\r\n  $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n  $scope.orderBy = 'createdAt';\r\n  $scope.sort = 'desc';\r\n\r\n  $scope.myImages = [];\r\n\r\n  $scope.loadMoreInfinite = false;\r\n  $scope.galleryInit = function (id) {\r\n    $scope.pageLoadSuccess = false;\r\n    $scope.galleryId = id;\r\n    mediaService.findMyMediaGallery({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', galleryId: id}).success(function (data) {\r\n      $scope.myImages = data.data;\r\n      $scope.pageLoadSuccess = true;\r\n      $scope.currentPage = data.current_page;\r\n      if ($scope.lastPage < data.last_page) {\r\n        $scope.lastPage += 1;\r\n        $scope.loadMoreInfinite = true;\r\n      }\r\n    });\r\n  };\r\n\r\n  $scope.showUploadModal = function (modelId, size) {\r\n    var modalInstance = $uibModal.open({\r\n      animation: true,\r\n      templateUrl: appSettings.BASE_URL + 'app/modals/model-multiple-upload/multiple-upload.html?v=' + Math.random().toString(36).slice(2),\r\n      controller: 'ModalUploadInstanceCtrl',\r\n      size: size,\r\n      backdrop: 'static',\r\n      keyboard: false,\r\n      resolve: {\r\n        type: function () {\r\n          return 'image';\r\n        },\r\n        mediaType: function () {\r\n          return 'image';\r\n        },\r\n        parentId: function () {\r\n          return $scope.galleryId;\r\n        },\r\n        modelId: function (){\r\n          return modelId\r\n        }\r\n      }\r\n\r\n    });\r\n    modalInstance.result.then(function (data) {\r\n      for (var i in data) {\r\n\r\n        $scope.myImages.push(data[i]);\r\n      }\r\n    });\r\n  };\r\n  $scope.setMainImage = function (index, id) {\r\n    mediaService.setMainImage(id).then(function (data) {\r\n      if (data.data.success) {\r\n        alertify.success(data.data.message);\r\n        window.location.reload();\r\n      } else {\r\n        alertify.error(data.data.error);\r\n      }\r\n    });\r\n  };\r\n  //delete media\r\n  $scope.deleteImageGallery = function (key, id) {\r\n    alertify.confirm('Are you sure you want to delete this?', function () {\r\n      earningService.countPaidItem(id, 'image').then(function (data) {\r\n        if (data.data == 0) {\r\n          mediaService.deleteImage(id).then(function (data) {\r\n            if (data.data.success) {\r\n              alertify.success(data.data.message);\r\n              $scope.myImages.splice(key, 1);\r\n            } else {\r\n              alertify.error(data.data.error);\r\n            }\r\n          });\r\n        } else {\r\n          alertify.alert('This is a purchase image. You can not delete it.');\r\n        }\r\n      });\r\n\r\n    }).set('title', 'Confirm');\r\n\r\n\r\n  };\r\n  //set image status active or inactive\r\n  $scope.setMediaStatus = function (index, status) {\r\n    if (status == 'processing') {\r\n      return;\r\n    }\r\n    var imageId = $scope.myImages[index].id;\r\n    mediaService.setMediaStatus(imageId, status).then(function (data) {\r\n      if (data.data.success) {\r\n        alertify.success(data.data.message);\r\n        $scope.myImages[index].status = data.data.status;\r\n      } else {\r\n        alertify.error(data.data.message);\r\n      }\r\n\r\n    });\r\n  };\r\n\r\n  $(window).scroll(function () {\r\n    if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n      mediaService.findMyMediaGallery({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image', galleryId: $scope.galleryId}).success(function (data) {\r\n        $scope.myImages = $scope.myImages.concat(data.data);\r\n        $scope.currentPage = data.current_page;\r\n        if ($scope.lastPage < data.last_page) {\r\n          $scope.lastPage += 1;\r\n          $scope.loadMoreInfinite = true;\r\n        } else {\r\n          $scope.loadMoreInfinite = false;\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelImageGalleriesCtrl', [\"$scope\", \"galleryService\", \"mediaService\", \"appSettings\", \"earningService\", function ($scope, galleryService, mediaService, appSettings, earningService) {\r\n\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'createdAt';\r\n    $scope.sort = 'desc';\r\n\r\n    $scope.myGaleries = [];\r\n\r\n    $scope.loadMoreInfinite = false;\r\n\r\n    galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image'}).success(function (data) {\r\n      $scope.myGalleries = data.data;\r\n\r\n      $scope.currentPage = data.current_page;\r\n      if ($scope.lastPage < data.last_page) {\r\n        $scope.lastPage += 1;\r\n        $scope.loadMoreInfinite = true;\r\n      }\r\n    });\r\n\r\n    //delete media\r\n    $scope.deleteImageGallery = function (key, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        mediaService.deleteFile(id).then(function (data) {\r\n          if (data.data.success) {\r\n            alertify.success(data.data.message);\r\n            $scope.myImages.splice(key, 1);\r\n          } else {\r\n            alertify.error(data.data.error);\r\n          }\r\n        });\r\n      }).set('title','Confirm');\r\n\r\n\r\n    };\r\n    //set image gallery status public or private\r\n    $scope.setGalleryStatus = function (index, status) {\r\n      var galleryId = $scope.myGalleries[index].id;\r\n      galleryService.setGalleryStatus(galleryId, status).then(function (data) {\r\n        if (data.data.success) {\r\n          $scope.myGalleries[index].status = data.data.gallery.status;\r\n          alertify.success(data.data.message);\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    };\r\n\r\n    /*\r\n     * delete Gallery\r\n     * @author: Phong Le<pt.hongphong@gmail.com>\r\n     */\r\n    $scope.deleteProcessing = 0;\r\n    $scope.deleteGallery = function (index, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        $scope.deleteProcessing = id;\r\n        earningService.countPaidGallery(id, 'image').then(function (data) {\r\n          if (data.data == 0) {\r\n\r\n            galleryService.deleteGallery(id).then(function (data) {\r\n              if (data.data.success) {\r\n                alertify.success(data.data.message);\r\n                $scope.myGalleries.splice(index, 1);\r\n              } else {\r\n                alertify.error(data.data.message);\r\n              }\r\n            });\r\n          } else {\r\n            alertify.alert('This is purchase galllery. You can not delete it.');\r\n            $scope.deleteProcessing = 0;\r\n          }\r\n        });\r\n\r\n      }).set('title', 'Confirm');\r\n\r\n\r\n    };\r\n    $(window).scroll(function () {\r\n      if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n        galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'image'}).success(function (data) {\r\n          $scope.myGalleries = $scope.myGalleries.concat(data.data);\r\n          $scope.currentPage = data.current_page;\r\n          if ($scope.lastPage < data.last_page) {\r\n            $scope.lastPage += 1;\r\n            $scope.loadMoreInfinite = true;\r\n          } else {\r\n            $scope.loadMoreInfinite = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }]);","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoGalleriesCtrl', [\"$scope\", \"galleryService\", \"mediaService\", \"appSettings\", \"earningService\", function ($scope, galleryService, mediaService, appSettings, earningService) {\r\n\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'createdAt';\r\n    $scope.sort = 'desc';\r\n\r\n    $scope.myGaleries = [];\r\n\r\n    $scope.loadMoreInfinite = false;\r\n\r\n    galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n      $scope.myGalleries = data.data;\r\n\r\n      $scope.currentPage = data.current_page;\r\n      if ($scope.lastPage < data.last_page) {\r\n        $scope.lastPage += 1;\r\n        $scope.loadMoreInfinite = true;\r\n      }\r\n    });\r\n\r\n    //delete media\r\n    $scope.deleteImageGallery = function (key, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        mediaService.deleteFile(id).then(function (data) {\r\n          if (data.data.success) {\r\n            alertify.success(data.data.message);\r\n            $scope.myGalleries.splice(key, 1);\r\n          } else {\r\n            alertify.error(data.data.error);\r\n          }\r\n        });\r\n      }).set('title', 'Confirm');\r\n\r\n\r\n    };\r\n//  set video status public or private\r\n    $scope.setGalleryStatus = function (index, status) {\r\n      var galleryId = $scope.myGalleries[index].id;\r\n      galleryService.setGalleryStatus(galleryId, status).then(function (data) {\r\n        if (data.data.success) {\r\n          $scope.myGalleries[index].status = data.data.gallery.status;\r\n          alertify.success(data.data.message);\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    };\r\n\r\n//delete Gallery\r\n    //@author: Phong Le<pt.hongphong@gmail.com>\r\n    $scope.deleteProcessing = 0;\r\n    $scope.deleteGallery = function (index, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        $scope.deleteProcessing = id;\r\n        earningService.countPaidGallery(id, 'video').then(function (data) {\r\n          if (data.data == 0) {\r\n            galleryService.deleteGallery(id).then(function (data) {\r\n              if (data.data.success) {\r\n                alertify.success(data.data.message);\r\n                $scope.myGalleries.splice(index, 1);\r\n              } else {\r\n                alertify.error(data.data.message);\r\n              }\r\n            });\r\n          } else {\r\n            alertify.alert('This is purchase galllery. You can not delete it.');\r\n            $scope.deleteProcessing = 0;\r\n          }\r\n        });\r\n      }).set('title', 'Confirm');\r\n    };\r\n\r\n    $(window).scroll(function () {\r\n      if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n        galleryService.findMyGalleries({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video'}).success(function (data) {\r\n          console.log(data.data);\r\n          $scope.myGalleries = $scope.myGalleries.concat(data.data);\r\n          $scope.currentPage = data.current_page;\r\n          if ($scope.lastPage < data.last_page) {\r\n            $scope.lastPage += 1;\r\n            $scope.loadMoreInfinite = true;\r\n          } else {\r\n            $scope.loadMoreInfinite = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }]);","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoGalleryCtrl', [\"$scope\", \"mediaService\", \"appSettings\", \"$uibModal\", \"earningService\", \"videoService\", function ($scope, mediaService, appSettings, $uibModal, earningService, videoService) {\r\n\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'createdAt';\r\n    $scope.sort = 'desc';\r\n\r\n    $scope.myVideos = [];\r\n\r\n    $scope.loadMoreInfinite = false;\r\n    $scope.galleryInit = function (id, modelId) {\r\n      $scope.galleryId = id;\r\n      const options = {\r\n        page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video' \r\n      };\r\n      if(modelId) {\r\n        options.modelId = modelId;\r\n      }\r\n      if(id) {\r\n        options.galleryId = id;\r\n      }\r\n      mediaService.findMyVideoGallery(options).success(function (data) {\r\n        $scope.myVideos = data.data;\r\n        $scope.currentPage = data.current_page;\r\n        if ($scope.lastPage < data.last_page) {\r\n          $scope.lastPage += 1;\r\n          $scope.loadMoreInfinite = true;\r\n        }\r\n      });\r\n    };\r\n\r\n    $scope.showUploadModal = function (size) {\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: appSettings.BASE_URL + 'app/modals/model-multiple-upload/multiple-upload.html?v=' + Math.random().toString(36).slice(2),\r\n        controller: 'ModalUploadInstanceCtrl',\r\n        size: size,\r\n        backdrop: 'static',\r\n        keyboard: false,\r\n        resolve: {\r\n          type: function () {\r\n            return 'video';\r\n          },\r\n          mediaType: function () {\r\n            return 'video';\r\n          },\r\n          parentId: function () {\r\n            return $scope.galleryId;\r\n          }\r\n        }\r\n\r\n      });\r\n      modalInstance.result.then(function (data) {\r\n        for (var i in data) {\r\n          $scope.myVideos.push(data[i]);\r\n        }\r\n      });\r\n    };\r\n\r\n    //delete media\r\n    $scope.deleteVideoGallery = function (key, id) {\r\n      alertify.confirm('Are you sure you want to delete this?', function () {\r\n        earningService.countPaidItem(id, 'video').then(function (data) {\r\n          if (data.data == 0) {\r\n            mediaService.deleteVideo(id).then(function (data) {\r\n              if (data.data.success) {\r\n                alertify.success(data.data.message);\r\n                $scope.myVideos.splice(key, 1);\r\n              } else {\r\n                alertify.error(data.data.error);\r\n              }\r\n            });\r\n          } else {\r\n            alertify.alert('This is a purchase video. You can not delete it.');\r\n          }\r\n        });\r\n\r\n      }).set('title', 'Confirm');\r\n\r\n\r\n    };\r\n    //show video popup\r\n    $scope.showVideoDetail = function (id, size) {\r\n      \r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: appSettings.BASE_URL + 'app/modals/video/modal.html',\r\n        controller: 'videoPopupCtrl',\r\n        size: size,\r\n        keyboard: false,\r\n        resolve: {\r\n          id: function () {\r\n            return id;\r\n          }\r\n        }\r\n\r\n      });\r\n      modalInstance.result.then(function (data) {\r\n//        window.location.reload();\r\n//        $('#account-status-' + id).text(data.accountStatus);\r\nconsole.log(data);\r\n      });\r\n    };\r\n\r\n//set image status active or inactive\r\n    $scope.setVideoStatus = function (index, status) {\r\n      if (status == 'processing') {\r\n        return;\r\n      }\r\n      var videoId = $scope.myVideos[index].id;\r\n      videoService.setVideoStatus(videoId, status).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          $scope.myVideos[index].status = data.data.status;\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n\r\n      });\r\n    };\r\n\r\n    $(window).scroll(function () {\r\n      if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n        const options = {page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, type: 'video', galleryId: $scope.galleryId};\r\n        if($scope.galleryId) {\r\n          options.galleryId = $scope.galleryId;\r\n        }\r\n        mediaService.findMyVideoGallery().success(function (data) {\r\n\r\n          $scope.myVideos = $scope.myVideos.concat(data.data);\r\n          $scope.currentPage = data.current_page;\r\n          if ($scope.lastPage < data.last_page) {\r\n            $scope.lastPage += 1;\r\n            $scope.loadMoreInfinite = true;\r\n          } else {\r\n            $scope.loadMoreInfinite = false;\r\n          }\r\n        });\r\n      }\r\n    });\r\n\r\n  }]);","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelVideoUploadCtrl', function ($scope, galleryService, mediaService, videoService) {\r\n\r\n  $scope.uploadInit = function (id, modelId) {\r\n    $scope.video = {};\r\n    $scope.video.ownerId = modelId;\r\n    \r\n    $scope.video.galleryId = id;\r\n    $scope.unitPrices = [\r\n      {\r\n        value: 15,\r\n        text: '15 tokens'\r\n      },\r\n      {\r\n        value: 20,\r\n        text: '20 tokens'\r\n      },\r\n      {\r\n        value: 25,\r\n        text: '25 tokens'\r\n      },\r\n      {\r\n        value: 30,\r\n        text: '30 tokens'\r\n      },\r\n      {\r\n        value: 35,\r\n        text: '35 tokens'\r\n      },\r\n      {\r\n        value: 40,\r\n        text: '40 tokens'\r\n      },\r\n      {\r\n        value: 45,\r\n        text: '45 tokens'\r\n      },\r\n      {\r\n        value: 50,\r\n        text: '50 tokens'\r\n      },\r\n      {\r\n        value: 55,\r\n        text: '55 tokens'\r\n      },\r\n      {\r\n        value: 60,\r\n        text: '60 tokens'\r\n      },\r\n      {\r\n        value: 65,\r\n        text: '65 tokens'\r\n      },\r\n      {\r\n        value: 70,\r\n        text: '70 tokens'\r\n      },\r\n      {\r\n        value: 75,\r\n        text: '75 tokens'\r\n      },\r\n      {\r\n        value: 80,\r\n        text: '80 tokens'\r\n      },\r\n      {\r\n        value: 85,\r\n        text: '85 tokens'\r\n      },\r\n      {\r\n        value: 90,\r\n        text: '90 tokens'\r\n      },\r\n      {\r\n        value: 95,\r\n        text: '95 tokens'\r\n      },\r\n      {\r\n        value: 100,\r\n        text: '100 tokens'\r\n      },\r\n      {\r\n        value: 120,\r\n        text: '120 tokens'\r\n      },\r\n      {\r\n        value: 140,\r\n        text: '140 tokens'\r\n      },\r\n      {\r\n        value: 160,\r\n        text: '160 tokens'\r\n      },\r\n      {\r\n        value: 180,\r\n        text: '180 tokens'\r\n      },\r\n      {\r\n        value: 200,\r\n        text: '200 tokens'\r\n      },\r\n      {\r\n        value: 220,\r\n        text: '220 tokens'\r\n      },\r\n      {\r\n        value: 240,\r\n        text: '240 tokens'\r\n      },\r\n      {\r\n        value: 260,\r\n        text: '260 tokens'\r\n      },\r\n      {\r\n        value: 280,\r\n        text: '280 tokens'\r\n      },\r\n      {\r\n        value: 300,\r\n        text: '300 tokens'\r\n      },\r\n      {\r\n        value: 320,\r\n        text: '320 tokens'\r\n      },\r\n      {\r\n        value: 340,\r\n        text: '340 tokens'\r\n      },\r\n      {\r\n        value: 360,\r\n        text: '360 tokens'\r\n      },\r\n      {\r\n        value: 380,\r\n        text: '380 tokens'\r\n      },\r\n      {\r\n        value: 400,\r\n        text: '400 tokens'\r\n      },\r\n      {\r\n        value: 420,\r\n        text: '420 tokens'\r\n      },\r\n      {\r\n        value: 440,\r\n        text: '440 tokens'\r\n      },\r\n      {\r\n        value: 460,\r\n        text: '460 tokens'\r\n      },\r\n      {\r\n        value: 480,\r\n        text: '480 tokens'\r\n      },\r\n      {\r\n        value: 500,\r\n        text: '500 tokens'\r\n      },\r\n      {\r\n        value: 550,\r\n        text: '550 tokens'\r\n      },\r\n      {\r\n        value: 600,\r\n        text: '600 tokens'\r\n      },\r\n      {\r\n        value: 650,\r\n        text: '650 tokens'\r\n      },\r\n      {\r\n        value: 700,\r\n        text: '700 tokens'\r\n      },\r\n      {\r\n        value: 750,\r\n        text: '750 tokens'\r\n      },\r\n      {\r\n        value: 800,\r\n        text: '800 tokens'\r\n      },\r\n      {\r\n        value: 850,\r\n        text: '850 tokens'\r\n      },\r\n      {\r\n        value: 900,\r\n        text: '900 tokens'\r\n      },\r\n      {\r\n        value: 950,\r\n        text: '950 tokens'\r\n      },\r\n      {\r\n        value: 1000,\r\n        text: '1000 tokens'\r\n      },\r\n    ];\r\n  };\r\n\r\n\r\n  if ($('#video-poster-uploader').length > 0) {\r\n    var posterSettings = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=poster&parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'png,jpg,jpeg',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n\r\n          $scope.video.poster = data.file.id;\r\n          alertify.success(data.message);\r\n          $(\"#poster-status\").html(\"\");\r\n\r\n        } else {\r\n          // alertify.error(data.message);\r\n          $(\"#poster-status\").html(\"<font color='red'>\"+data.message+\"</font>\");\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#poster-status\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        mediaService.deleteImage(element.file.id).then(function (data) {\r\n          if (data.data.success) {\r\n            $scope.video.poster = null;\r\n            alertify.success(data.data.message);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $(\"#video-poster-uploader\").uploadFile(posterSettings);\r\n  }\r\n  if ($('#video-trailer-uploader').length > 0) {\r\n    var trailerSettings = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=trailer&parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'mp4,m4v,ogg,ogv,webm',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n\r\n          $scope.video.trailer = data.file.id;\r\n          alertify.success(data.message);\r\n          $(\"#video-trailer-status\").html('');\r\n\r\n        } else {\r\n          // alertify.error(data.message);\r\n          $(\"#video-trailer-status\").html(\"<font color='red'>\"+data.message+\"</font>\");\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#video-trailer-status\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        if(data.success){\r\n          mediaService.deleteVideo(element.file.id).then(function (data1) {\r\n            if (data1.data.success) {\r\n              $scope.video.trailer = null;\r\n              alertify.success(data.data.message);\r\n            }\r\n          });\r\n        }\r\n      }\r\n    };\r\n    $(\"#video-trailer-uploader\").uploadFile(trailerSettings);\r\n  }\r\n  if ($('#video-full-movie-uploader').length > 0) {\r\n    var fullMovieSettings = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=video&parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'mp4,m4v,ogg,ogv,webm',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data, xhr)\r\n      {\r\n\r\n        if (data.success == true) {\r\n\r\n          $scope.video.fullMovie = data.file.id;\r\n          alertify.success(data.message);\r\n          $(\"#video-full-movie-status\").html('');\r\n        } else {\r\n          // alertify.error(data.message);\r\n          $(\"#video-full-movie-status\").html(\"<font color='red'>\"+data.message+\"</font>\");\r\n        }\r\n\r\n      },\r\n      onError: function (files, status, errMsg)\r\n      {\r\n        $(\"#video-full-movie-status\").html(\"<font color='red'>Upload is Failed</font>\");\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        mediaService.deleteVideo(element.file.id).then(function (data) {\r\n          if (data.data.success) {\r\n            $scope.video.fullMovie = null;\r\n            alertify.success(data.data.message);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $(\"#video-full-movie-uploader\").uploadFile(fullMovieSettings);\r\n  }\r\n\r\n  $scope.formSubmitted = false;\r\n  $scope.errors = {};\r\n  \r\n  $scope.submitUploadVideo = function (form) {\r\n\r\n    if (form.$valid) {\r\n      $scope.formSubmitted = true;\r\n\r\n        videoService.create($scope.video).then(function (data) {\r\n            $scope.errors = {};\r\n          if (data.data.success) {\r\n            alertify.success(data.data.message);\r\n            window.location.href = data.data.url;\r\n            $scope.errors = {};\r\n          } else {\r\n              $scope.errors = data.data.errors;\r\n            $scope.formSubmitted = false;\r\n            if(data.data.message)\r\n                alertify.alert(data.data.message).setHeader('Warning');\r\n          }\r\n        });\r\n       \r\n    }\r\n  };\r\n  $scope.submitUpdateVideo = function (form) {\r\n\r\n    if (form.$valid) {\r\n\r\n          videoService.update($scope.video).then(function (data) {\r\n              $scope.errors = {};\r\n            if (data.data.success) {\r\n              alertify.success(data.data.message);\r\n              window.location.href = data.data.url;\r\n            } else {\r\n                $scope.errors = data.data.errors;\r\n                $scope.formSubmitted = false;\r\n                if(data.data.message)\r\n                    alertify.alert(data.data.message).setHeader('Warning');\r\n            }\r\n          });\r\n\r\n    }\r\n  };\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelSettingCtrl', function ($scope, authService, userService, countryService) {\r\n\r\n  $scope.settings = [\r\n    {\r\n      password: {\r\n        oldPassword: '',\r\n        newPassword: '',\r\n        newpPasswordRetype: ''\r\n      }\r\n    }];\r\n  $scope.submitOtherSetting = function (form) {\r\n    if (form.$valid) {\r\n      \r\n      userService.updateOtherSetting($scope.settings).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  $scope.submitChangePassword = function (form) {\r\n\r\n    if (form.$valid) {\r\n      authService.changePassword($scope.settings.password.oldPassword, $scope.settings.password.newPassword, function (data) {\r\n        if (data.success) {\r\n          alertify.success(data.message);\r\n          window.location.href = '/login';\r\n        } else {\r\n          alertify.notify(data.message, 'error', 15);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.countries = [];\r\n  $scope.countryInit = function (countryId) {\r\n    countryService.getCountries().then(function (data) {\r\n      $scope.countries = data.data;\r\n    });\r\n    $scope.contact.countryId = countryId;\r\n  };\r\n\r\n  $scope.formSubmitted = false;\r\n  $scope.errors = [];\r\n  $scope.submitUpdateContact = function (form) {\r\n    if (form.$valid) {\r\n      $scope.formSubmitted = true;\r\n      userService.updateContact($scope.contact).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          window.location.href = data.data.url;\r\n        } else {\r\n          $scope.formSubmitted = false;\r\n          alertify.error(data.data.message);\r\n          $scope.errors = data.data.errors;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.payment = {};\r\n  $scope.paymentValue = [\r\n    {\r\n      min: 20\r\n    },\r\n    {\r\n      min: 50\r\n    },\r\n    {\r\n      min: 100\r\n    },\r\n    {\r\n      min: 200\r\n    },\r\n    {\r\n      min: 250\r\n    },\r\n    {\r\n      min: 500\r\n    },\r\n    {\r\n      min: 1000\r\n    }\r\n  ];\r\n  $scope.paymentInit = function (payment) {\r\n      var data = JSON.parse(payment);\r\n      \r\n    $scope.payment = data;\r\n  };\r\n  $scope.submitUpdatePayment = function (form) {\r\n    if (form.$valid) {\r\n        $scope.errors = {};\r\n      userService.updatePayment($scope.payment).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          window.location.href = data.data.url;\r\n        } else {\r\n            console.log(data.data.errors);\r\n          $scope.errors = data.data.errors;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  $scope.suspend = {\r\n    reason: '',\r\n    password: '',\r\n    check: false\r\n  };\r\n  $scope.submitted = false;\r\n  $scope.submitDisableAccount = function (form) {\r\n\r\n    if (form.$valid) {\r\n      $scope.submitted = true;\r\n      userService.suspendAccount($scope.suspend).then(function (data) {\r\n        if (data.data.success) {\r\n          alertify.success(data.data.message);\r\n          window.location.href = '/';\r\n        } else {\r\n          $scope.submitted = false;\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    }\r\n  };\r\n  \r\n  $scope.initSettings = function (settings){\r\n    \r\n    $scope.settings = settings;\r\n  }\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelScheduleCtrl', function ($scope, scheduleService, $timeout) {\r\n\r\n  $scope.schedule = {\r\n    id: null,\r\n    nextLiveShow: '',\r\n    monday: '',\r\n    tuesday: '',\r\n    wednesday: '',\r\n    thursday: '',\r\n    friday: '',\r\n    saturday: '',\r\n    sunday: ''\r\n\r\n  };\r\n\r\n  $scope.scheduleInit = function (schedule) {\r\n    if (schedule) {\r\n      $scope.schedule = schedule;\r\n    }\r\n  };\r\n  $('#nextLiveShow').datetimepicker({\r\n    debug: false,\r\n    format: 'YYYY/MM/DD HH:mm',\r\n    minDate: moment(),\r\n    showTodayButton: true,\r\n    showClear: true\r\n  });\r\n  ;\r\n  $('#nextLiveShow').on('dp.change', function (e) {\r\n    $timeout(function () {\r\n      $scope.schedule.nextLiveShow = e.target.value;\r\n    });\r\n\r\n  })\r\n  $(\"#monday, #tuesday, #wednesday, #thursday, #friday, #saturday, #sunday\").on('dp.change', function (e) {\r\n    $timeout(function () {\r\n      switch (e.target.id) {\r\n        case 'monday':\r\n          $scope.schedule.monday = e.target.value;\r\n          break;\r\n        case 'tuesday':\r\n          $scope.schedule.tuesday = e.target.value;\r\n          break;\r\n        case 'wednesday':\r\n          $scope.schedule.wednesday = e.target.value;\r\n          break;\r\n        case 'thursday':\r\n          $scope.schedule.thursday = e.target.value;\r\n          break;\r\n        case 'friday':\r\n          $scope.schedule.friday = e.target.value;\r\n          break;\r\n        case 'saturday':\r\n          $scope.schedule.saturday = e.target.value;\r\n          break;\r\n        case 'sunday':\r\n          $scope.schedule.sunday = e.target.value;\r\n          break;\r\n      }\r\n      if(e.target.value){\r\n        $('#'+e.target.id).parent().find('.schedule__notavailable-btn').prop('checked', false);\r\n      }\r\nconsole.log(e.target.value);\r\n    });\r\n  }).datetimepicker({\r\n    format: 'HH:mm'\r\n  });\r\n  $('.schedule__notavailable-btn').click(function() {\r\n    $(this).parent().find('.input-md').val('');\r\n  });\r\n  $scope.submitUpdateSchedule = function (form) {\r\n    if (form.$valid) {\r\n      scheduleService.setSchedule($scope.schedule).then(function (data) {\r\n\r\n        if (data.data.id) {\r\n          alertify.success('Update successfully.');\r\n          window.location.href = '/models/dashboard/schedule';\r\n        } else {\r\n          alertify.error('Update error');\r\n          window.location.reload();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n});","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('modelEarningCtrl', function ($scope, $timeout, earningService, appSettings) {\r\n    $scope.timePeriod = {\r\n        group: 'day',\r\n        start: null,\r\n        end: null\r\n    };\r\n    $scope.earnings = {};\r\n    $scope.submitSearch = false;\r\n\r\n    $('#timePeriodStart').datetimepicker({\r\n        format: 'YYYY-MM-DD'\r\n    });\r\n    $('#timePeriodEnd').datetimepicker({\r\n        format: 'YYYY-MM-DD',\r\n        useCurrent: false //Important! See issue #1075\r\n    });\r\n    $(\"#timePeriodStart\").on(\"dp.change\", function (e) {\r\n        $timeout(function () {\r\n            $scope.timePeriod.start = e.target.value;\r\n//      $scope.timePeriod.start = $filter('date')(e.date, 'MM/dd/yyyy');\r\n            $('#timePeriodEnd').data(\"DateTimePicker\").minDate(e.date);\r\n        });\r\n\r\n    });\r\n    $(\"#timePeriodEnd\").on(\"dp.change\", function (e) {\r\n        $scope.timePeriod.end = e.target.value;\r\n        $('#timePeriodStart').data(\"DateTimePicker\").maxDate(e.date);\r\n    });\r\n\r\n    $scope.earningInit = function () {\r\n        $scope.currentPage = 1;\r\n        $scope.lastPage = 1;\r\n        $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n        $scope.orderBy = 'createdAt';\r\n        $scope.sort = 'desc';\r\n        $scope.pagination = 0;\r\n        $scope.timePeriod.page = 0;\r\n        $scope.loadMoreInfinite = false;\r\n\r\n        earningService.findMe({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, start: $scope.timePeriod.start, end: $scope.timePeriod.end, group: $scope.timePeriod.group}).success(function (data) {\r\n            $scope.earnings = data.data;\r\n            $scope.currentPage = data.current_page;\r\n            if ($scope.lastPage < data.last_page) {\r\n                $scope.lastPage += 1;\r\n                $scope.loadMoreInfinite = true;\r\n            }\r\n\r\n        });\r\n//    earningService.pagination($scope.timePeriod).success(function (data) {\r\n//      $scope.pagination = data;\r\n//    });\r\n    };\r\n    $scope.earningInit();\r\n\r\n    $scope.submitFilterPeriod = function (form) {\r\n        $scope.currentPage = 1;\r\n        $scope.lastPage = 1;\r\n        $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n        $scope.orderBy = 'createdAt';\r\n        $scope.sort = 'desc';\r\n        $scope.pagination = 0;\r\n        $scope.timePeriod.page = 0;\r\n        $scope.loadMoreInfinite = false;\r\n\r\n        if (form.$valid) {\r\n\r\n            $scope.submitSearch = true;\r\n            earningService.findMe({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, start: $scope.timePeriod.start, end: $scope.timePeriod.end, group: $scope.timePeriod.group}).success(function (data) {\r\n\r\n                $scope.earnings = data.data;\r\n                $scope.currentPage = data.current_page;\r\n                if ($scope.lastPage < data.last_page) {\r\n                    $scope.lastPage += 1;\r\n                    $scope.loadMoreInfinite = true;\r\n                }\r\n\r\n            });\r\n        }\r\n    };\r\n    $(window).scroll(function () {\r\n        if ($(window).scrollTop() == $(document).height() - $(window).height() && $scope.loadMoreInfinite) {\r\n            $scope.loadMoreReport();\r\n        }\r\n    });\r\n    $scope.loadMoreReport = function () {\r\n//    earningService.findMe($scope.timePeriod, $scope.page).then(function (data) {\r\n//      if (data.data.length > 0) {\r\n//        $scope.earnings = $scope.earnings.concat(data.data);\r\n//        $scope.timePeriod.page = parseInt($scope.timePeriod.page + 1);\r\n//      } else {\r\n//        $scope.pagination = 0;\r\n//        $scope.loadMoreInfinite = false;\r\n//      }\r\n//    });\r\n        earningService.findMe({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, start: $scope.timePeriod.start, end: $scope.timePeriod.end, group: $scope.timePeriod.group}).success(function (data) {\r\n\r\n            $scope.earnings = $scope.earnings.concat(data.data);\r\n            $scope.currentPage = data.current_page;\r\n            if ($scope.lastPage < data.last_page) {\r\n                $scope.lastPage += 1;\r\n                $scope.loadMoreInfinite = true;\r\n            } else {\r\n                $scope.loadMoreInfinite = false;\r\n            }\r\n\r\n        });\r\n    };\r\n    //return null if change group by\r\n    $scope.changeGroup = function () {\r\n        $scope.earnings = {};\r\n        $scope.submitSearch = false;\r\n        $scope.earningInit();\r\n    };\r\n    //show detail group by day\r\n\r\n\r\n    $scope.showDayDetail = function (index, date) {\r\n//    $scope.earnings[index].details = [];\r\n//    earningService.filterByDay(date).then(function (data) {\r\n//\r\n//      $scope.earnings[index].details = data.data;\r\n//\r\n//    });\r\n        if (typeof $scope.earnings[index].details != 'undefined' && $scope.earnings[index].details) {\r\n            $scope.earnings[index].details = null;\r\n            return false;\r\n        } else {\r\n            $scope.earnings[index].details = [];\r\n        }\r\n        earningService.filterByDay(date).then(function (data) {\r\n\r\n            $scope.earnings[index].details = data.data;\r\n\r\n        });\r\n\r\n    };\r\n    //Show detail by none\r\n    $scope.showNoneDetail = function (index, earningId) {\r\n//    $scope.earnings[index].detail = [];\r\n//    earningService.filterByDefault(earningId).then(function (data) {\r\n//      $scope.earnings[index].detail = data.data;\r\n//    });\r\n        if (typeof $scope.earnings[index].detail != 'undefined' && $scope.earnings[index].detail) {\r\n            \r\n            $scope.earnings[index].detail = null;\r\n            return;\r\n        } else {\r\n            $scope.earnings[index].detail = [];\r\n        }\r\n//    \r\n\r\n        earningService.filterByDefault(earningId).then(function (data) {\r\n            $scope.earnings[index].detail = data.data;\r\n        });\r\n    };\r\n});","'use strict';\r\nangular.module('matroshkiApp')\r\n.controller('modelOnlineCtrl', [\r\n  '$scope', 'appSettings', '_', 'onlineService', 'socket',\r\n  function ($scope, appSettings, _, onlineService, socket) {\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    $scope.perPage = appSettings.LIMIT_PER_PAGE;\r\n    $scope.orderBy = 'isStreaming';\r\n    $scope.sort = 'desc';\r\n    $scope.totalPages = 0;\r\n    $scope._ = _;\r\n    $scope.modelOnlineNull = false;\r\n    $scope.keyword = '';\r\n    $scope.filter = 'week';\r\n    $scope.styleModelItem = {};\r\n    $scope.getData = function () {\r\n        var widthScreen = $(window).width();\r\n        if(widthScreen > 2000){\r\n            var widthItems = Math.floor(100/Math.floor(widthScreen/280));\r\n            $scope.styleModelItem = {\r\n                \"width\": widthItems+'%'\r\n            };\r\n        }\r\n      onlineService.get({page: $scope.lastPage, orderBy: $scope.orderBy, sort: $scope.sort, limit: $scope.perPage, keyword: $scope.keyword, filter: $scope.filter, category: $scope.categoryId}).success(function (data) {\r\n        $scope.users = data.data;\r\n        $scope.currentPage = data.current_page;\r\n        $scope.totalPages = data.last_page;//Math.ceil(data.total / data.per_page);\r\n        if (data.total == 0) {\r\n          $scope.modelOnlineNull = true;\r\n        } else {\r\n          $scope.modelOnlineNull = false;\r\n        }\r\n\r\n      });\r\n    };\r\n\r\n    $scope.customSplitStringTags = function (item) {\r\n        if (item.tags != null) {\r\n            var arr = item.tags.split(',');\r\n            return arr;\r\n        }\r\n    };\r\n\r\n    $scope.getTopModels = function () {\r\n      onlineService.getTopModels().success(function (data) {\r\n        $scope.topModels = data;\r\n      });\r\n    };\r\n\r\n    $scope.setPage = function (page) {\r\n      if (page > 0 && page <= $scope.totalPages) {\r\n        $scope.lastPage = page;\r\n        $scope.getData();\r\n      }\r\n    };\r\n\r\n    $scope.onlineInit = function (keyword, id) {\r\n      $scope.keyword = keyword;\r\n      $scope.categoryId = id || '';\r\n      $scope.getData();\r\n      $scope.getTopModels();\r\n      // Run function every second\r\n      setInterval($scope.getData, 30000);\r\n    };\r\n\r\n    $scope.setFilter = function (filter) {\r\n      $scope.filter = filter;\r\n      $scope.getData();\r\n    };\r\n    //load models in streaming page\r\n    $scope.getModelsByCategory = function (model, category) {\r\n\r\n      onlineService.getModelsByCategory(model, category).success(function (data)\r\n      {\r\n        $scope.users = data;\r\n      });\r\n    };\r\n\r\n    $scope.setFavorite = function (index, id) {\r\n      onlineService.setFavorite(id).then(function (data) {\r\n        if (data.data.success) {\r\n          $scope.users[index].favorite = (data.data.favorite === 'like') ? data.data.favorite : null;\r\n        } else {\r\n          alertify.error(data.data.message);\r\n        }\r\n      });\r\n    };\r\n\r\n    $scope.isRotate = false;\r\n\r\n    $scope.modelRotates = function (thread) {\r\n\r\n      onlineService.getModelRotateImages(thread.threadId).then(function (data) {\r\n\r\n        if (data && angular.isArray(data.data)) {\r\n          $scope.isRotate = true;\r\n\r\n          var images = data.data;\r\n\r\n          angular.forEach(images, function (item) {\r\n            setTimeout(function () {\r\n              thread.lastCaptureImage = item;\r\n            }, 150);\r\n          });\r\n        }\r\n      });\r\n\r\n    };\r\n  }\r\n]);\r\n","'use strict';\r\nangular.module('matroshkiApp').controller('mediaCtrl', ['$scope', 'appSettings', 'videoService', 'galleryService', 'mediaService', function ($scope, appSettings, videoService, galleryService, mediaService) {\r\n    $scope.currentTab = 0;\r\n    $scope.currentPage = 1;\r\n    $scope.lastPage = 1;\r\n    \r\n    $scope.setTab = function (index) {\r\n      $scope.currentTab = index;\r\n      $scope.currentPage = 1;\r\n      $scope.lastPage = 1;\r\n      $scope.getMedia(index, 1);\r\n    };\r\n\r\n//init data\r\n    $scope.init = function (model) {\r\n      $scope.modelId = model;\r\n    };\r\n    $scope.getMedia = function (index, page) {\r\n      if (index == 1) {\r\n        videoService.getModelVideos($scope.modelId, page).success(function (data) {\r\n          $scope.videos = data.data;\r\n          $scope.currentPage = data.current_page;\r\n          $scope.lastPage = data.last_page;\r\n        });\r\n      } else if (index == 2) {\r\n        galleryService.getModelGalleries($scope.modelId, page).success(function (data) {\r\n          \r\n          $scope.galleries = data.data;\r\n          $scope.currentPage = data.current_page;\r\n          $scope.lastPage = data.last_page;\r\n        });\r\n      }\r\n    };\r\n    $scope.changePage = function (status){\r\n      if(status == 0){\r\n          var page = ($scope.currentPage > 1) ? parseInt($scope.currentPage - 1) : 1;\r\n          $scope.getMedia($scope.currentTab, page);\r\n      }else{\r\n          console.log($scope.currentPage, $scope.lastPage);\r\n          var page = ($scope.currentPage < $scope.lastPage) ? parseInt($scope.currentPage + 1) : $scope.lastPage;\r\n          $scope.getMedia($scope.currentTab, page);\r\n      }\r\n    };\r\n    //check owner\r\n    $scope.checkOwner = function (item, url) {\r\n      \r\n      mediaService.checkOwner({id: item.id}).then(function (data) {\r\n        if (!data.data.success) {\r\n          return alertify.alert(data.data.message);\r\n        } else {\r\n          if (data.data.owner > 0) {\r\n\r\n            window.location.href = url + '/' + item.id;\r\n          } else {\r\n            alertify.confirm(\"Are you sure you want to buy this ( \"+item.galleryPrice+\" tokens)?\", function (e) {\r\n              if (e) {\r\n                $.ajax({\r\n                  url: appSettings.BASE_URL + 'api/v1/buy-item',\r\n                  type: 'post',\r\n                  data: {\r\n                    id: item.id,\r\n                    item: item.type\r\n                  },\r\n                  success: function (data) {\r\n                    if (!data.success) {\r\n                      alertify.alert('Warning', data.message);\r\n                    } else {\r\n                      alertify.success(data.message);\r\n                      window.location.href = data.url;\r\n                    }\r\n                  }\r\n                });\r\n              }\r\n            }).setHeader('<em> Confirm </em> ');\r\n          }\r\n        }\r\n      });\r\n    };\r\n  }]);","/* \r\n * To change this license header, choose License Headers in Project Properties.\r\n * To change this template file, choose Tools | Templates\r\n * and open the template in the editor.\r\n */\r\n\r\n\r\n'use strict';\r\nangular.module('matroshkiApp').controller('paymentCtrl', ['$scope', '$uibModal', 'appSettings', function ($scope, $uibModal, appSettings) {\r\n\r\n//Reject transaction\r\n    $scope.rejectTransaction = function (id) {\r\n      alertify.confirm('Are you sure you want to reject this transaction? Please refund member money first.',\r\n              function () {\r\n                return window.location.href = appSettings.BASE_URL + 'admin/manager/transaction/reject/' + id;\r\n              }).set('title', 'Confirm');\r\n    }\r\n    //Approve transaction\r\n    $scope.approveTransaction = function (id) {\r\n      alertify.confirm('Are you sure you want to approve this transaction?',\r\n              function () {\r\n                return window.location.href = appSettings.BASE_URL + 'admin/manager/transaction/approve/' + id;\r\n              }).set('title', 'Confirm');\r\n    }\r\n    //transaction detail\r\n\r\n    $scope.showTransactionDetail = function (transaction, size) {\r\n      var modalInstance = $uibModal.open({\r\n        animation: true,\r\n        templateUrl: appSettings.BASE_URL + 'app/modals/transaction/modal.html',\r\n        controller: 'transactionPopupCtrl',\r\n        size: size,\r\n        backdrop: 'static',\r\n        keyboard: false,\r\n        resolve: {\r\n          transaction: function () {\r\n            return transaction;\r\n          }\r\n        }\r\n\r\n      });\r\n      modalInstance.result.then(function (data) {\r\n//        window.location.reload();\r\n\r\n      });\r\n//  \r\n    };\r\n  }]);","'use strict';\r\n\r\nangular.module('matroshkiApp').controller('modelPayoutRequestCtrl', ['$scope', 'payoutService', function ($scope, payoutService) {\r\n    $scope.startDate = {\r\n      open: false,\r\n      value: ''\r\n    };\r\n    $scope.toDate = {\r\n      open: false,\r\n      value: ''\r\n    };\r\n    $scope.typeRequest = '';\r\n    $scope.init = function(typeRequest, dateFrom, dateTo){\r\n      $scope.typeRequest = typeRequest;\r\n      if(dateFrom){\r\n        $scope.startDate.value = new Date(dateFrom);\r\n      }\r\n      if(dateTo){\r\n        $scope.toDate.value = new Date(dateTo);\r\n      }\r\n    };\r\n    $scope.$watch('startDate.value', function(data){\r\n      showRequestPayout($scope.startDate.value, $scope.toDate.value);\r\n    });\r\n    $scope.$watch('toDate.value', function(data){\r\n      showRequestPayout($scope.startDate.value, $scope.toDate.value);\r\n    });\r\n    $scope.earningByRequestedDate = null;\r\n    $scope.previousPayout = null;\r\n    $scope.pendingBalance = null;\r\n    function showRequestPayout(startDate, endDate) {\r\n      if(startDate && endDate){\r\n        var convertedStartDate = new Date(startDate);\r\n        var convertedEndDate = new Date(endDate);\r\n        var options = {\r\n          startDate: convertedStartDate.getFullYear() + \"-\" + (convertedStartDate.getMonth() + 1) + \"-\" + convertedStartDate.getDate(),\r\n          endDate: convertedEndDate.getFullYear() + \"-\" + (convertedEndDate.getMonth() + 1) + \"-\" + convertedEndDate.getDate()\r\n        };\r\n        payoutService.getEarningByRequestedDate(options).then(function(data) {          \r\n          $scope.earningByRequestedDate = data.data.amount;\r\n          return payoutService.getLastestRequestPayout($scope.typeRequest);\r\n        }).then(function(data){\r\n          $scope.previousPayout = data.data.amount;\r\n          return payoutService.getTotalPendingBalance();\r\n        }).then(function(data){\r\n          $scope.pendingBalance = (data.data.amount - $scope.earningByRequestedDate).toFixed(1);\r\n        }); \r\n      }\r\n    }\r\n  }\r\n])\r\n.controller('ModelRequestPayoutViewCrl', ['$scope', 'payoutService' ,function ($scope, payoutService) {\r\n    $scope.comments = [];\r\n\r\n    $scope.init = function(data) {\r\n      $scope.request = data;\r\n      $scope.status = data.status;\r\n      $scope.note = data.note;\r\n      $scope.studioId = data.studioId;\r\n      payoutService.getComments(data.id, !!$scope.studioId)\r\n        .then(function(resp) {\r\n          $scope.comments = resp.data;\r\n        });\r\n    };\r\n\r\n    $scope.comment = function() {\r\n      payoutService.addComment($scope.request.id, {\r\n        text: $scope.newComment,\r\n        studioId: $scope.studioId\r\n      }, !!$scope.studioId)\r\n      .then(function(resp) {\r\n        $scope.comments.push(resp.data);\r\n        $scope.newComment = '';\r\n      });\r\n    };\r\n\r\n    //for admin only\r\n    $scope.updateStatus = function() {\r\n      payoutService.updateStatus($scope.request.id, {\r\n        status: $scope.status,\r\n        note: $scope.note\r\n      }, !!$scope.studioId)\r\n      .then(function(resp) {\r\n        alertify.success('Request has been updated!');\r\n      });\r\n    };\r\n  }\r\n]);","'use strict';\r\nangular.module('matroshkiApp')\r\n.controller('modelAddProductCtrl', function ($scope, $, mediaService, appSettings) {\r\n  if ($('#video-poster-uploader').length > 0) {\r\n    var posterSettings = {\r\n      url: appSettings.BASE_URL + 'api/v1/upload-items?mediaType=poster&parent-id=0',\r\n      method: \"POST\",\r\n      allowedTypes: 'png,jpg,jpeg',\r\n      fileName: 'myFiles',\r\n      multiple: false,\r\n      showDelete: true,\r\n      showPreview: false,\r\n      showDone: true,\r\n      statusBarWidth: '100%',\r\n      dragdropWidth: '100%',\r\n      onSuccess: function (files, data) {\r\n        if (data.success) {\r\n          const productImage = $('.product-image .img-responsive');\r\n          if(productImage.prop('tagName') !== 'undefined'){\r\n            productImage.prop('src', '/'+data.file.path);\r\n          }\r\n          $('#image-id').val(data.file.id);\r\n          alertify.success(data.message);\r\n          $scope.uploadStatus = '';\r\n        } else {\r\n          $scope.uploadStatus = \"<font color='red'>\"+data.message+\"</font>\";\r\n        }\r\n      },\r\n      onError: function (files, status, errMsg) {\r\n        $(\"#poster-status\").html(\"<font color='red'>Upload is Failed</font>\");\r\n        $scope.uploadStatus = \"<font color='red'>Upload failed</font>\";\r\n      },\r\n      deleteCallback: function (element, data, pd) {\r\n        mediaService.deleteImage(element.file.id).then(function (data) {\r\n          if (data.data.success) {\r\n            $('#image-id').val('');\r\n            alertify.success(data.data.message);\r\n          }\r\n        });\r\n      }\r\n    };\r\n    $(\"#video-poster-uploader\").uploadFile(posterSettings);\r\n  }\r\n\r\n  $scope.submit = function(form) {\r\n    //TODO - validate me\r\n    $('#add-product-frm').submit();\r\n  };\r\n});","'use strict';\r\n\r\nangular.module('matroshkiApp').controller('buyProductCtrl', [\r\n  '$scope', 'productService', function ($scope, productService) {\r\n    $scope.quantity = 1;\r\n\r\n    $scope.buy = function(product) {\r\n      if (!$scope.quantity || $scope.quantity < 0) {\r\n        return alertify.error('Invalid quantity');\r\n      }\r\n\r\n      if ($scope.quantity > product.inStock) {\r\n        return alertify.error('Invalid quantity');\r\n      }\r\n\r\n      if (!window.appSettings.USER) {\r\n        return alertify.error('Please login.');\r\n      }\r\n\r\n      productService.buy(product.id, { quantity: $scope.quantity })\r\n      .then(function(data) {\r\n        if (!data.success) {\r\n          return alertify.error(data.data.message);\r\n        }\r\n\r\n        alertify.success('Buy product successfully.');\r\n      });\r\n    };\r\n  }\r\n]);","'use strict';\r\n\r\nangular.module('matroshkiApp').controller('orderTrackingCtrl', [\r\n  '$scope', 'orderService', function ($scope, orderService) {\r\n    $scope.comments = [];\r\n\r\n    $scope.init = function(data) {\r\n      $scope.order = data;\r\n      $scope.shippingStatus = data.shippingStatus;\r\n      $scope.updatedShippingStatus = data.shippingStatus;\r\n      $scope.note = data.note;\r\n      $scope.status = data.status || 'open';\r\n\r\n      orderService.getComments(data.id)\r\n        .then(function(resp) {\r\n          $scope.comments = resp.data;\r\n        });\r\n    };\r\n\r\n    $scope.updateStatus = function() {\r\n      orderService.update($scope.order.id, {\r\n        shippingStatus: $scope.shippingStatus,\r\n        note: $scope.note,\r\n        status: $scope.status\r\n      })\r\n      .then(function(data) {\r\n        $scope.updatedShippingStatus = $scope.shippingStatus;\r\n        return alertify.success('Update order successfully.');\r\n      });\r\n    };\r\n\r\n    $scope.comment = function() {\r\n      orderService.addComment($scope.order.id, {\r\n        text: $scope.newComment\r\n      })\r\n      .then(function(resp) {\r\n        $scope.comments.push(resp.data);\r\n        $scope.newComment = '';\r\n      });\r\n    };\r\n  }\r\n]);"]}